require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:10))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/fig5_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m3F")
# BuildLine("m7R1")
# BuildLine("m7R2")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:10))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/fig5_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7F")
# BuildLine("m7R1")
# BuildLine("m7R2")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:10))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/fig5_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7R1")
# BuildLine("m7R1")
# BuildLine("m7R2")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:100))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/fig5_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7R1")
# BuildLine("m7R1")
# BuildLine("m7R2")
BuildLine("m7F")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
#   indLineAl <-.06        # individual line alpha
indLineAl <-.6        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:100))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/fig5_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7F")
# BuildLine("m7R1")
# BuildLine("m7R2")
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
#   indLineAl <-.06        # individual line alpha
indLineAl <-.6        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:100))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m3R4.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m3R4")
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
#   indLineAl <-.6        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:9022))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m3R4.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m3R4")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
#   indLineAl <-.6        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:9022))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m7R4.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7R4")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
indLineAl <-.06        # individual line alpha
#   indLineAl <-.6        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:9022))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m7R4_2.png", plot=p, width =4 , height =4)
return( p )
}
BuildLine("m7R4")
# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
indLineSz <-.08        # individual line size
#   indLineAl <-.06        # individual line alpha
indLineAl <-1        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:9022))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m7F_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7F")
require(ggplot2)
require(dplyr)
require(reshape2)
BuildLine <- function( modelName, baseSize=11 ) {
# Traditional reading in the files
pathdsp  <- file.path("./Models/LCM/models/datasets", paste0(modelName,"_dsp.rds"))
dsp <- readRDS(pathdsp)
###############################################
### graph of prediction
# bgColour<-gray(.95)   # background color
#   indLineSz <-.08        # individual line size
indLineSz <-.5        # individual line size
#   indLineAl <-.06        # individual line alpha
indLineAl <-1        # individual line alpha
themeLine <- ggplot2::theme_bw(base_size=baseSize) +
ggplot2::theme(title=ggplot2::element_text(colour="gray20",size = 12)) +
ggplot2::theme(axis.text=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(axis.title=ggplot2::element_text(colour="gray40")) +
ggplot2::theme(panel.border = ggplot2::element_rect(colour="gray80")) +
ggplot2::theme(axis.ticks.length = grid::unit(0, "cm")) +
ggplot2::theme(text = element_text(size =20)) #+
# ggplot2::theme(panel.background=element_rect(fill=bgColour,colour=NA)) +
# ggplot2::theme(legend.position=c(.95,.90),legend.direction="vertical") +
# ggplot2::theme(legend.background = element_rect(fill=NA)) +
# ggplot2::theme(legend.text = element_text(size = 15),legend.title.align =(-3.3))# +
# ggplot2::theme(panel.grid = element_line(linetype = 1,size=rel(3)))
ds<- dsp %>% dplyr::filter(id %in% c(1:9022))
# ds<- dsp
# head(ds)
p<- ggplot2::ggplot(ds, aes(x=timec, y=attend, group=id))
# geoms
p <- p + geom_line(aes(x=timec,y=yHat),colour="red",alpha=indLineAl,size=indLineSz, na.rm=T)
p <- p + geom_line(aes(y=yFE), fill=NA, na.rm=T)
# scales & coordinates
p <- p + scale_x_continuous(breaks=c(0:11))
p <- p + scale_y_continuous(breaks=seq(0, 8, 1))
p <- p + coord_cartesian(xlim=c(-.5, 11.5), ylim=c(.5, 8.5))
# themes, guide, and annotations
p <- p + themeLine
p <- p + labs(title="How often have you attended a worship service?", x="Years Since 2000", y="Church Attendance")
ggsave(filename="./Models/LCM/graphs/text/m7F_2.png", plot=p, width =5 , height =4)
return( p )
}
BuildLine("m7F")
numID<- 9022 # highest id value (max = 9022)
### Define the data that will populate the model
ds<- dsL %>%  # chose conditions to apply in creating dataset for modeling
dplyr::filter(id < numID) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # birth year 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # only complete trajectories
dplyr::mutate( # compute new variables
age= year-byear, # definition of age to be used in the model
timec=year-2000, # metric of time is rounds of NSLY97 in years, centered at 2000
timec2= timec^2,
timec3= timec^3,
#         timec= age-16, # metric of time is bilogical age in years, centered at 16
#         timec2= timec^2,
#         timec3= timec^3,#
cohort=byear-1980) %.% # age difference, years younger (unit - 1 cohort away)
dplyr::select( # assemble the dataset for modeling
id, sample, race, byear,cohort, # Time Invariant variables
year,
age, timec,timec2,timec3, attend)  # Time Variant variables
head(ds)
table(ds$byear) # the year of birth  - metric: YEAR
table(ds$age) # years past 16 -  metric: AGE
table(ds$year, ds$age) # YEAR by  AGE
length(unique(ds$id)) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
length(unique(ds$timec))
