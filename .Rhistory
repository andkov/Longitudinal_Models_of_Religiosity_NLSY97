max(abs(relgrad))
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
agec= year-byear,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980)
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
agec= year-byear,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
agec, attend, timec,timec2, timec3)  # Time Variant variables
head(ds, 13)
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
agec= year-byear,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear
agec= year-byear+16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear+16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 + agec| id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
#   dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
#   dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 + agec| id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=200)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
#   dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + agec + agec2 + agec3
+ cohort + cohort:agec + cohort:agec2 + cohort:agec3
+ (1 + agec + agec2| id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=20000)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
#   dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + timec + timec2 + timec3
+ cohort + cohort:timec + cohort:timec2 + cohort:timec3
+ (1 + timec + timec2| id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=20000)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
cat("\014") # clears console
modelNumber<- "m10"
numID<- 9022
modnum<-cat(modelNumber)
dsL<-readRDS("./Data/Derived/dsL.rds")
ds<- dsL %>%  # chose conditions to apply in creating ds for modeling
dplyr::filter(id %in% c(1:numID)) %.% # 1:9022
dplyr::filter(year %in% c(2000:2011)) %.% # 1997:2011
dplyr::filter(sample %in% c(1)) %.% # 0-Oversample; 1-Cross-Sectional
dplyr::filter(race %in% c(4)) %.% # 1-Black; 2-Hispanis; 3-Mixed; 4-White
dplyr::filter(byear %in% c(1980:1984)) %.% # 1980:1984
#   dplyr::filter(ave(!is.na(attend), id, FUN = all)) %.% # remove ids with NA
dplyr::mutate( # create new variables
timec=year-2000, # time centered at 2000, years since 2000
timec2= timec^2,
timec3= timec^3,
age= year-byear,
agec= year-byear-16,
agec2= agec^2,
agec3= agec^3,# age centered at 16, years since 16
cohort=byear-1980) %.% # age difference, years younger
dplyr::select( # assemble the dataset for modeling
id,idF, sample, race, byear,cohort, # Time Invariant variables
year,
timec,timec2, timec3, attend, agec, agec2, agec3)  # Time Variant variables
head(ds, 13)
table(ds$byear) # the year of birth  - metric: YEAR
table(round(ds$agec,0)) # years past 16 -  metric: AGE
table(ds$sample, ds$race)/length(unique(ds$year)) # Sample BY Race counts
cat(length(unique(ds$id))) # total No. of respondents in dataset
sum(!is.na(ds$attend)) # valid datapoints
sum(is.na(ds$attend)) # NA in the dataset
# Estimate the model
modnum <-lmer (attend ~
1  + timec + timec2 + timec3
+ cohort + cohort:timec + cohort:timec2 + cohort:timec3
+ (1 | id),
data = ds, REML=FALSE,
control=lmerControl(optCtrl=list(maxfun=20000)))
model<- modnum
summary(model)
relgrad <- with(model@optinfo$derivs,solve(Hessian,gradient))
max(abs(relgrad))
