{
    "contents" : "\n###################################\n### Reproducible Research\n###################################\n# When executed by R, this file will manipulate the original data sources (ie, ZZZZ)\n# to produce a groomed dataset suitable for analysis and graphing.\n\n\n\n###################################\n# Clear memory from previous runs\nbase::rm(list=base::ls(all=TRUE))\n\n#####################################\n## @knitr LoadData\n\n###################################\n# Verify the working directory has been set correctly.  Much of the code assumes the working directory is the repository's root directory.\n# In the following line, rename `RAnalysisSkeleton` to your repository.\nif( base::basename(base::getwd()) != \"Longitudinal_Models_of_Religiosity_NLSY97\" ) {\n  base::stop(\"The working directory should be set to the root of the package/repository.  \",\n       \"It's currently set to `\", base::getwd(), \"`.\")\n}\n###################################\n# Install the necessary packages.\npathInstallPackages <- \"./UtilityScripts/InstallPackages.R\"\nif( !file.exists(pathInstallPackages)) {\n  base::stop(\"The file `\", pathInstallPackages, \"` was not found.  Make sure the working directory is set to the root of the repository.\")\n}\nbase::source(pathInstallPackages, local=new.env()) \n\nbase::rm(pathInstallPackages)\n\n\n###################################\n# Load the necessary packages.\nbase::require(base)\nbase::require(knitr)\nbase::require(markdown)\nbase::require(testit)\nbase::require(plyr)\nbase::require(reshape2)\n\n\n\n  ### Import the data ##\npathDir<-file.path(getwd()) # define path for project root directory\n\n# Links to the data source\ntagset<-c(\"NLSY97_Religiosity_20042014\") #\"Database_ResponseOfInterest_DateOfDownload\"\npathDataFolder<-file.path(getwd(),paste0(\"Documentation/data/\",tagset))\npathDataSource<-file.path(pathDataFolder,paste0(tagset,\".csv\")) \npathDataSourceLabels<-file.path(pathDataFolder,paste0(tagset,\".dct\"))  \n# reading in the data\ndsSource<-read.csv(pathDataSource,header=TRUE, skip=0,sep=\",\")\nvarnames<-names(dsSource)\n\n# NLSY97 variable id are linked to the descriptive label in the file dictionary file \"NLSY97_Religiosity_20042014.dtc\"\ndsSourceLabels<-read.csv(pathDataSourceLabels,header=TRUE, skip=0,nrow=ncol(dsSource), sep=\"\")\ndsSourceLabels$X.<-NULL\ndsSourceLabels<-rename(dsSourceLabels,replace=c(\"infile\"=\"RNUM\",\"dictionary\"=\"VARIABLE_TITLE\"))\n\n#sort by mpg (ascending) and cyl (descending)\ndsSourceLabels<-arrange(dsSourceLabels,VARIABLE_TITLE) # sort by Variable Title\nwrite.table(dsSourceLabels, \"./Documentation/data/dsSourceLabels.csv\", sep=\",\")\n\n############################\n## @knitr TweakData\n\n# Using renaming template \"NLSY97_Religiosity_20042014.xlsx\" located in \"Documentation\\data\" folder\n# rename the native variable names of NLSY97 (left) into custom chosen names for programming convenience (right)\n\ndsSource<-rename(dsSource, c(\n  \"R0323900\"=\"famrel_1997\",\n  \"R2165200\"=\"famrel_1998\",\n  \"R3483100\"=\"famrel_1999\",\n  \"R4881300\"=\"famrel_2000\",\n  \"S2977900\"=\"internet_2003\",\n  \"S4676700\"=\"internet_2004\",\n  \"S6308900\"=\"internet_2005\",\n  \"S8329800\"=\"internet_2006\",\n  \"T0737600\"=\"internet_2007\",\n  \"T2779700\"=\"internet_2008\",\n  \"T4494400\"=\"internet_2009\",\n  \"T6141400\"=\"internet_2010\",\n  \"T7635300\"=\"internet_2011\",\n  \"R1193900\"=\"agemon_1997\",\n  \"R2553400\"=\"agemon_1998\",\n  \"R3876200\"=\"agemon_1999\",\n  \"R5453600\"=\"agemon_2000\",\n  \"R7215900\"=\"agemon_2001\",\n  \"S1531300\"=\"agemon_2002\",\n  \"S2000900\"=\"agemon_2003\",\n  \"S3801000\"=\"agemon_2004\",\n  \"S5400900\"=\"agemon_2005\",\n  \"S7501100\"=\"agemon_2006\",\n  \"T0008400\"=\"agemon_2007\",\n  \"T2011000\"=\"agemon_2008\",\n  \"T3601400\"=\"agemon_2009\",\n  \"T5201300\"=\"agemon_2010\",\n  \"T6651200\"=\"agemon_2011\",\n  \"R1194100\"=\"ageyear_1997\",\n  \"R2553500\"=\"ageyear_1998\",\n  \"R3876300\"=\"ageyear_1999\",\n  \"R5453700\"=\"ageyear_2000\",\n  \"R7216000\"=\"ageyear_2001\",\n  \"S1531400\"=\"ageyear_2002\",\n  \"S2001000\"=\"ageyear_2003\",\n  \"S3801100\"=\"ageyear_2004\",\n  \"S5401000\"=\"ageyear_2005\",\n  \"S7501200\"=\"ageyear_2006\",\n  \"T0008500\"=\"ageyear_2007\",\n  \"T2011100\"=\"ageyear_2008\",\n  \"T3601500\"=\"ageyear_2009\",\n  \"T5201400\"=\"ageyear_2010\",\n  \"T6651300\"=\"ageyear_2011\",\n  \"R1235800\"=\"sample\",\n  \"S0919700\"=\"todo_2002\",\n  \"S6317100\"=\"todo_2005\",\n  \"T2782200\"=\"todo_2008\",\n  \"T7637800\"=\"todo_2011\",\n  \"R4893900\"=\"happy_2000\",\n  \"S0921100\"=\"happy_2002\",\n  \"S4682200\"=\"happy_2004\",\n  \"S8332600\"=\"happy_2006\",\n  \"T2782900\"=\"happy_2008\",\n  \"T6144000\"=\"happy_2010\",\n  \"R4893600\"=\"nervous_2000\",\n  \"S0920800\"=\"nervous_2002\",\n  \"S4681900\"=\"nervous_2004\",\n  \"S8332300\"=\"nervous_2006\",\n  \"T2782600\"=\"nervous_2008\",\n  \"T6143700\"=\"nervous_2010\",\n  \"R4893700\"=\"calm_2000\",\n  \"S0920900\"=\"calm_2002\",\n  \"S4682000\"=\"calm_2004\",\n  \"S8332400\"=\"calm_2006\",\n  \"T2782700\"=\"calm_2008\",\n  \"T6143800\"=\"calm_2010\",\n  \"R4894000\"=\"depressed_2000\",\n  \"S0921200\"=\"depressed_2002\",\n  \"S4682300\"=\"depressed_2004\",\n  \"S8332700\"=\"depressed_2006\",\n  \"T2783000\"=\"depressed_2008\",\n  \"T6144100\"=\"depressed_2010\",\n  \"R4893800\"=\"blue_2000\",\n  \"S0921000\"=\"blue_2002\",\n  \"S4682100\"=\"blue_2004\",\n  \"S8332500\"=\"blue_2006\",\n  \"T2782800\"=\"blue_2008\",\n  \"T6143900\"=\"blue_2010\",\n  \"R0552400\"=\"attendPR\",\n  \"R4893400\"=\"attend_2000\",\n  \"R6520100\"=\"attend_2001\",\n  \"S0919300\"=\"attend_2002\",\n  \"S2987800\"=\"attend_2003\",\n  \"S4681700\"=\"attend_2004\",\n  \"S6316700\"=\"attend_2005\",\n  \"S8331500\"=\"attend_2006\",\n  \"T0739400\"=\"attend_2007\",\n  \"T2781700\"=\"attend_2008\",\n  \"T4495000\"=\"attend_2009\",\n  \"T6143400\"=\"attend_2010\",\n  \"T7637300\"=\"attend_2011\",\n  \"S1225400\"=\"computer_2002\",\n  \"T1049900\"=\"computer_2007\",\n  \"T3145100\"=\"computer_2008\",\n  \"T4565400\"=\"computer_2009\",\n  \"T6209600\"=\"computer_2010\",\n  \"T7707000\"=\"computer_2011\",\n  \"S1225500\"=\"tv_2002\",\n  \"T1050000\"=\"tv_2007\",\n  \"T3145200\"=\"tv_2008\",\n  \"T4565500\"=\"tv_2009\",\n  \"T6209700\"=\"tv_2010\",\n  \"T7707100\"=\"tv_2011\",\n  \"T2782400\"=\"faith_2008\",\n  \"T7638000\"=\"faith_2011\",\n  \"R0536401\"=\"bmonth\",\n  \"R0536402\"=\"byear\",\n  \"R1482600\"=\"race\",\n  \"R0536300\"=\"sex\",\n  \"R0000100\"=\"id\",\n  \"T2111500\"=\"bornagain_2008\",\n  \"T6759400\"=\"bornagain_2011\",\n  \"S0919600\"=\"decisions_2002\",\n  \"S6317000\"=\"decisions_2005\",\n  \"T2782100\"=\"decisions_2008\",\n  \"T7637700\"=\"decisions_2011\",\n  \"S0919500\"=\"obeyed_2002\",\n  \"S6316900\"=\"obeyed_2005\",\n  \"T2782000\"=\"obeyed_2008\",\n  \"T7637600\"=\"obeyed_2011\",\n  \"S5532800\"=\"relpref_2005\",\n  \"T2111400\"=\"relpref_2008\",\n  \"T6759300\"=\"relpref_2011\",\n  \"S0919400\"=\"values_2002\",\n  \"S6316800\"=\"values_2005\",\n  \"T2781900\"=\"values_2008\",\n  \"T7637500\"=\"values_2011\",\n  \"S0919800\"=\"pray_2002\",\n  \"S6317200\"=\"pray_2005\",\n  \"T2782300\"=\"pray_2008\",\n  \"T7637900\"=\"pray_2011\",\n  \"T6650500\"=\"release\",\n  \"R0552200\"=\"relraisedPR\"\n))\n# keeping only binary responses in attitudinal variables\ndsSource$todo_2002=ifelse((dsSource$todo_2002 %in% c(0,1)),dsSource$todo_2002,NA)\ndsSource$todo_2005=ifelse((dsSource$todo_2005 %in% c(0,1)),dsSource$todo_2005,NA)\ndsSource$todo_2008=ifelse((dsSource$todo_2008 %in% c(0,1)) ,dsSource$todo_2008,NA)\ndsSource$todo_2011=ifelse((dsSource$todo_2011 %in% c(0,1)) ,dsSource$todo_2011,NA)\n\ndsSource$values_2002=ifelse((dsSource$values_2002 %in% c(0,1)),dsSource$values_2002,NA)\ndsSource$values_2005=ifelse((dsSource$values_2005 %in% c(0,1)),dsSource$values_2005,NA)\ndsSource$values_2008=ifelse((dsSource$values_2008 %in% c(0,1)) ,dsSource$values_2008,NA)\ndsSource$values_2011=ifelse((dsSource$values_2011 %in% c(0,1)) ,dsSource$values_2011,NA)\n\ndsSource$obeyed_2002=ifelse((dsSource$obeyed_2002 %in% c(0,1)),dsSource$obeyed_2002,NA)\ndsSource$obeyed_2005=ifelse((dsSource$obeyed_2005 %in% c(0,1)),dsSource$obeyed_2005,NA)\ndsSource$obeyed_2008=ifelse((dsSource$obeyed_2008 %in% c(0,1)) ,dsSource$obeyed_2008,NA)\ndsSource$obeyed_2011=ifelse((dsSource$obeyed_2011 %in% c(0,1)) ,dsSource$obeyed_2011,NA)\n\ndsSource$pray_2002=ifelse((dsSource$pray_2002 %in% c(0,1)),dsSource$pray_2002,NA)\ndsSource$pray_2005=ifelse((dsSource$pray_2005 %in% c(0,1)),dsSource$pray_2005,NA)\ndsSource$pray_2008=ifelse((dsSource$pray_2008 %in% c(0,1)) ,dsSource$pray_2008,NA)\ndsSource$pray_2011=ifelse((dsSource$pray_2011 %in% c(0,1)) ,dsSource$pray_2011,NA)\n\ndsSource$decisions_2002=ifelse((dsSource$decisions_2002 %in% c(0,1)),dsSource$decisions_2002,NA)\ndsSource$decisions_2005=ifelse((dsSource$decisions_2005 %in% c(0,1)),dsSource$decisions_2005,NA)\ndsSource$decisions_2008=ifelse((dsSource$decisions_2008 %in% c(0,1)) ,dsSource$decisions_2008,NA)\ndsSource$decisions_2011=ifelse((dsSource$decisions_2011 %in% c(0,1)) ,dsSource$decisions_2011,NA)\n\n# recode negativale worded question:  1 - more religious\ndsSource$todo_2002=ifelse((dsSource$todo_2002 %in% c(1)),0,ifelse((dsSource$todo_2002 %in% c(0)),1,NA))\ndsSource$todo_2005=ifelse((dsSource$todo_2005 %in% c(1)),0,ifelse((dsSource$todo_2005 %in% c(0)),1,NA))\ndsSource$todo_2008=ifelse((dsSource$todo_2008 %in% c(1)),0,ifelse((dsSource$todo_2008 %in% c(0)),1,NA))\ndsSource$todo_2011=ifelse((dsSource$todo_2011 %in% c(1)),0,ifelse((dsSource$todo_2011 %in% c(0)),1,NA))\n\ndsSource$values_2002=ifelse((dsSource$values_2002 %in% c(1)),0,ifelse((dsSource$values_2002 %in% c(0)),1,NA))\ndsSource$values_2005=ifelse((dsSource$values_2005 %in% c(1)),0,ifelse((dsSource$values_2005 %in% c(0)),1,NA))\ndsSource$values_2008=ifelse((dsSource$values_2008 %in% c(1)),0,ifelse((dsSource$values_2008 %in% c(0)),1,NA))\ndsSource$values_2011=ifelse((dsSource$values_2011 %in% c(1)),0,ifelse((dsSource$values_2011 %in% c(0)),1,NA))\n\n# Recode ATTENDANCE into valid values\nattendcategoreis<-c(1:8)\ndsSource$attend_2000=ifelse((dsSource$attend_2000 %in% attendcategoreis),dsSource$attend_2000,NA)\ndsSource$attend_2001=ifelse((dsSource$attend_2001 %in% attendcategoreis),dsSource$attend_2001,NA)\ndsSource$attend_2002=ifelse((dsSource$attend_2002 %in% attendcategoreis),dsSource$attend_2002,NA)\ndsSource$attend_2003=ifelse((dsSource$attend_2003 %in% attendcategoreis),dsSource$attend_2003,NA)\ndsSource$attend_2004=ifelse((dsSource$attend_2004 %in% attendcategoreis),dsSource$attend_2004,NA)\ndsSource$attend_2005=ifelse((dsSource$attend_2005 %in% attendcategoreis),dsSource$attend_2005,NA)\ndsSource$attend_2006=ifelse((dsSource$attend_2006 %in% attendcategoreis),dsSource$attend_2006,NA)\ndsSource$attend_2007=ifelse((dsSource$attend_2007 %in% attendcategoreis),dsSource$attend_2007,NA)\ndsSource$attend_2008=ifelse((dsSource$attend_2008 %in% attendcategoreis),dsSource$attend_2008,NA)\ndsSource$attend_2009=ifelse((dsSource$attend_2009 %in% attendcategoreis),dsSource$attend_2009,NA)\ndsSource$attend_2010=ifelse((dsSource$attend_2010 %in% attendcategoreis),dsSource$attend_2010,NA)\ndsSource$attend_2011=ifelse((dsSource$attend_2010 %in% attendcategoreis),dsSource$attend_2011,NA)\n\n# keep only observations that has non-interrupted attendance for all years\n# dsSource <- dsSource[dsSource$attend_2000 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2001 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2002 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2003 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2004 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2005 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2006 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2007 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2008 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2009 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2010 %in% attendcategoreis, ]\n# dsSource <- dsSource[dsSource$attend_2011 %in% attendcategoreis, ]\n\n# Include only records with a valid birth year\ndsSource <- dsSource[dsSource$byear %in% 1980:1984, ]\n\n#Include only records with a valid ID\ndsSource <- dsSource[dsSource$id != \"V\", ]\ndsSource$id <- as.integer(dsSource$id)\n# remove all but one dataset\n#  rm(list=setdiff(ls(), \"dsSource\"))\n\n\n\n## Will's code\n# #########################################################################################################\n# ####\n# #### The following example comes from https://github.com/wibeasley/Wats.  Rename the paths appropriately.\n# ####\n# \n# \n# ###################################\n# # Declare the paths of the necessary files.\n# \n# # The raw/input data files:\n# pathCensus199x <- base::paste0(\"./Datasets/CensusIntercensal/STCH-icen199\", 0:9, \".txt\")\n# pathCensus200x <- \"./Datasets/CensusIntercensal/CO-EST00INT-AGESEX-5YR.csv\"\n# pathCountyFips <- \"./Datasets/CountyFipsCode.csv\"\n# \n# # The derived/intermediate data files (which are produced by the repository's code files):\n# pathCensusYearly <- \"./Datasets/CensusIntercensal/CensusCountyYear.csv\"\n# pathCensusMonthly <- \"./Datasets/CensusIntercensal/CensusCountyMonth.csv\"\n# pathDataForAnalaysis2005 <- \"./Datasets/CountyMonthBirthRate2005Version.csv\"\n# pathDataForAnalaysis2014 <- \"./Datasets/CountyMonthBirthRate2014Version.csv\"\n# \n# # Code Files:\n# pathManipulateCensus <- \"./UtilityScripts/IsolateCensusPopsForGfr.R\"\n# pathCalculateGfr <- \"./UtilityScripts/CalculateGfr.R\"\n# \n# #Report Files:\n# pathsReports <- base::file.path(\"./vignettes\", c(\"MbrFigures.Rmd\", \"OkFertilityWithIntercensalEstimates.Rmd\"))\n# \n# ###################################\n# # Verify the necessary path can be found.\n# \n# # The raw/input data files:\n# testit::assert(\"The 10 census files from 199x should exist.\", base::file.exists(pathCensus199x))\n# testit::assert(\"The 200x census file should exist.\", base::file.exists(pathCensus200x))\n# testit::assert(\"The county FIPS values should exist.\", base::file.exists(pathCountyFips))\n# \n# # Code Files:\n# testit::assert(\"The file that restructures the census data should exist.\", base::file.exists(pathManipulateCensus))\n# testit::assert(\"The file that calculates the GFR should exist.\", base::file.exists(pathCalculateGfr))\n# \n# #Report Files:\n# testit::assert(\"The knitr Rmd files should exist.\", base::file.exists(pathsReports))\n# \n# ###################################\n# # Run the files that manipulate and analyze.\n# \n# # Execute code that restructures the Census data\n# base::source(pathManipulateCensus, local=base::new.env())\n# \n# # Assert that the intermediate files exist (the two files produced by `IsolateCensusPopsForGfr.R`)\n# testit::assert(\"The yearly records should exist.\", base::file.exists(pathCensusYearly))\n# testit::assert(\"The monthly records should exist.\", base::file.exists(pathCensusMonthly))\n# \n# #Execute code that combines the census and birth count data.\n# base::source(pathCalculateGfr, local=base::new.env())\n# \n# # Verify that the two human readable datasets are present.\n# testit::assert(\"The CSV for the 2005 Version should exist.\", base::file.exists(pathDataForAnalaysis2005))\n# testit::assert(\"The CSV for the 2014 Version should exist.\", base::file.exists(pathDataForAnalaysis2014))\n# \n# ###################################\n# # Build the reports\n# for( pathRmd in pathsReports ) {\n#   pathMd <- base::gsub(pattern=\".Rmd$\", replacement=\".md\", x=pathRmd)\n#   pathHtml <- base::gsub(pattern=\".Rmd$\", replacement=\".html\", x=pathRmd)\n#   knitr::knit(input=pathRmd, output=pathMd)\n#   markdown::markdownToHTML(file=pathMd, output=pathHtml)\n# }\n",
    "created" : 1398049485601.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1915293875",
    "id" : "CCC1EFA4",
    "lastKnownWriteTime" : 1398071626,
    "path" : "~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/Documentation/Reproduce.R",
    "project_path" : "Documentation/Reproduce.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}