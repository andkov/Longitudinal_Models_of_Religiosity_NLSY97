{
    "contents" : "rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.\n#####################################\n## @knitr LoadPackages\nrequire(knitr)\nrequire(RColorBrewer)\nrequire(plyr)\nrequire(scales) #For formating values in graphs\nrequire(ggplot2)\nrequire(reshape2) #For convertin wide to long\nrequire(plotrix) #For the 3D pie chart (Please notice that this package includes much more than this feature.)\nrequire(epade) #For the 3D bar chart (Please notice that this package includes more than this feature.)\n\n#####################################\n## @knitr DeclareGlobals\nsource(\"./CommonCode/BookTheme.R\")\n\nchapterTheme <- BookTheme  + \n  theme(axis.ticks.length = grid::unit(0, \"cm\"))\n# chapterThemeBar <- chapterTheme\n# chapterThemeBox <- chapterTheme + \n#   theme(axis.ticks.x.length = grid::unit(0, \"cm\"))\n#####################################\n## @knitr LoadDatasets\n# 'ds' stands for 'datasets'\ndsPregnancy <- read.csv(\"./Data/ExercisePregnancy.csv\", stringsAsFactors=FALSE)\ndsObesity <- read.csv(\"./Data/FoodHardshipObesity.csv\", stringsAsFactors=FALSE)\ndsSmoking <- read.csv(\"./Data/SmokingTax.csv\", stringsAsFactors=FALSE)\n#####################################\n## @knitr TweakDatasets\ndsPregnancy$BabyWeightInKG <- dsPregnancy$BabyWeightInG / 1000\n\ndsPregnancySummarized <- ddply(dsPregnancy, .variables=\"DeliveryMethod\", summarize, Count=length(SubjectID))\ndsPregnancySummarized$Proportion = dsPregnancySummarized$Count/sum(dsPregnancySummarized$Count)\ndsPregnancySummarized$Percentage <- paste0(round(dsPregnancySummarized$Proportion*100), \"%\")\ndsPregnancySummarized$Dummy <- c(1,1)\n\nmatPregnancy <- as.matrix((table(dsPregnancy$DeliveryMethod)))\n# dsPregnancyMatrix <- cbind(dsPregnancyMatrix, c(1, 2), c(1,1))[, c(2,3,1)]\n# matPregnancy\n\ndsPregnancyLong <- reshape2::melt(dsPregnancy, id.vars=c(\"SubjectID\", \"Group\"), \n                                  measure.vars=paste0(\"T\", 1:5, \"Lifts\"), \n                                  variable.name=\"TimePoint\", value.name=\"LiftCount\")\n#                                   dsPregnancy$SubjectID\ndsPregnancyLong$TimePoint <- as.integer(gsub(pattern=\"T(\\\\d)Lifts\", \"\\\\1\", dsPregnancyLong$TimePoint, perl=T))\n\ndsPregnancyLongSummarized <- plyr::ddply(dsPregnancyLong, .variables=c(\"TimePoint\", \"Group\"), summarize, CountMean=mean(LiftCount, na.rm=T))\n#####################################\n## @knitr Figure03_01\n# cat(\"The two rotations demonstrate that the nonzero angle favors some slices more than others.\")\n# oldPar <- par(mfrow=c(1, 2)) #par(mfrow=c(1, 1))\n#Left Panel\nplotrix::pie3D(x=dsPregnancySummarized$Count, labels=dsPregnancySummarized$DeliveryMethod, height=.5,\n      edges=1000, start=pi*1/5, theta=pi/10, mar=c(0, 0, 0, 0))\n# #Right Panel\n# plotrix::pie3D(x=dsPregnancySummarized$Count, labels=NULL, height=.5, \n#       edges=1000, start=pi*5/5, theta=pi/10, mar=c(0, 0, 0, 0))\n# par(oldPar)\n\n# cat(\"To demonstrate the weaknesses a pie chart, we shouldn't use a dataset that has an angle at 90, 180, or 270 degrees.  Something like this is almost impossible to tell the ratio between the slices.\")\n# pieval <- c(2,4,6,8)\n# pielabels <- c(\"We hate\\n pies\",\"We oppose\\n  pies\",\"We don't\\n  care\",\"We just love pies\")\n# pie3D(pieval, radius=0.9, labels=pielabels, explode=0.1, main=\"3D PIE OPINIONS\") #Documentation example of pie3D\n\n#####################################\n## @knitr Figure03_02\noldPar <- par(mar=c(0,0,0,0))\ngraphics::pie(x=dsPregnancySummarized$Count, labels=dsPregnancySummarized$DeliveryMethod, col=PalettePregancyDelivery, clockwise=TRUE)\npar(oldPar)\n\n#####################################\n## @knitr Figure03_03\ndsPregnancy$Dummy <- factor(1, levels=c(1,2))\nepade::bar3d.ade(x=factor(dsPregnancy$DeliveryMethod), y=dsPregnancy$Dummy, \n                 xlab=\"\", zticks=c(\"\", \"\"), zlab=\"\", \n                 col=c(\"red\", NA, \"cyan\", NA), wall=2)\ndsPregnancy$Dummy <- NULL\n\n#####################################\n## @knitr Figure03_04\nggplot(dsPregnancySummarized, aes(x=DeliveryMethod, y=Count, fill=DeliveryMethod, label=Percentage)) +\n  geom_bar(stat=\"identity\") +\n  scale_fill_manual(values=PalettePregancyDelivery) +\n  coord_flip() +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  labs(x=NULL, y=\"Number of Participants\")\n\n#####################################\n## @knitr Figure03_05\nggplot(dsPregnancySummarized, aes(x=DeliveryMethod, y=Count, fill=DeliveryMethod, label=Percentage)) +\n  geom_bar(stat=\"identity\", alpha=.6) +\n  geom_text(stat=\"identity\", size=6, hjust=1.1)  +\n  scale_fill_manual(values=PalettePregancyDelivery) +\n  coord_flip(ylim = c(0, 1.05*max(dsPregnancySummarized$Count, na.rm=T))) +\n  chapterTheme +\n  theme(legend.position = \"none\") +\n  theme(axis.text.y=element_text(size=14)) +\n  labs(x=NULL, y=\"Number of Participants\")\n\n#####################################\n## @knitr Figure03_07\n#Refer to Recipe 3.10 (\"Making a Cleveland Dot Plot\") in Winston Chang's *R Graphics Cookbook* (2013).\nstateOrder <- dsObesity$State[order(dsObesity$ObesityRate)]\ndsObesity$State <- factor(dsObesity$State, levels=stateOrder)\n\nggplot(dsObesity[dsObesity$Location==\"South\", ], aes(x=ObesityRate, y=State)) +\n  geom_segment(aes(yend=State, xend=min(ObesityRate)), color=adjustcolor(PaletteObesityState[2], .5)) +\n  geom_point(size=3, shape=21, color=PaletteObesityState[2], fill=adjustcolor(PaletteObesityState[2], alpha.f=.5)) +\n  scale_x_continuous(label=scales::percent) + \n  chapterTheme +\n  theme(panel.grid.major.y= element_blank()) +\n  labs(title=\"Obesity Rate in 2011\", x=\"Percent of Residents in a State\", y=NULL)\n\n#####################################\n## @knitr Figure03_08\nggplot(dsObesity, aes(x=FoodHardshipRate, y=ObesityRate)) +\n  geom_point(shape=21, size=3, color=PaletteObesityState[2], fill=adjustcolor(PaletteObesityState[2], alpha.f=.25)) + #This color should match the obesity Cleveland dot plot\n  scale_x_continuous(label=scales::percent) +\n  scale_y_continuous(label=scales::percent) +\n  coord_fixed() + \n  chapterTheme +\n  labs(x=\"Food Hardship Rate (in 2011)\", y=\"Obesity Rate (in 2011)\")\n\n#####################################\n## @knitr Figure03_09\n# ggplot(dsObesity, aes(x=FoodHardshipRate, y=ObesityRate, label=State, color=Location)) +\n#   geom_text(size=3, alpha=1) +\n#   scale_x_continuous(label=scales::percent) +\n#   scale_y_continuous(label=scales::percent) +\n#   scale_color_manual(values=PaletteObesityState) +\n#   coord_fixed() + \n#   chapterTheme +\n#   theme(legend.position=c(0, 1), legend.justification=c(0, 1)) +\n#   labs(x=\"Food Hardship Rate (in 2011)\", y=\"Obesity Rate (in 2011)\") +\n#     theme(legend.title=element_text(colour=\"gray40\"), legend.text=element_text(colour=\"gray40\"))  \n\nhardshipRange <- range(dsObesity$FoodHardshipRate)\nobesityRange <- range(dsObesity$ObesityRate)\n# obesityDiff <- diff(obesityRange)\nggplot(dsObesity, aes(x=FoodHardshipRate, y=ObesityRate, label=State, color=Location)) +\n  geom_text(size=3, alpha=1) +\n  scale_x_continuous(label=scales::percent) +\n  scale_y_continuous(label=scales::percent) +\n  scale_color_manual(values=PaletteObesityState) +\n  coord_fixed() + \n  chapterTheme +\n  theme(legend.position=\"none\") +\n  labs(x=\"Food Hardship Rate (in 2011)\", y=\"Obesity Rate (in 2011)\") +\n  annotate(\"text\", x=hardshipRange[1], y= obesityRange[2], label=\"Location\", hjust=0, colour=\"gray40\", fontface=2, size=4) +\n  annotate(\"text\", x=hardshipRange[1], y=obesityRange[2], label=\"\\n\\n[Southern]\", hjust=0, colour=PaletteObesityState[2], size=4) +\n  annotate(\"text\", x=hardshipRange[1], y=obesityRange[2], label=\"\\n\\n\\n\\n[Other]\", hjust=0, colour=PaletteObesityState[1], size=4)\n\n#####################################\n## @knitr Figure03_10\nggplot(dsPregnancy, aes(x=T5Lifts)) +\n  geom_histogram(binwidth=2.5, fill=\"coral4\", color=\"gray95\", alpha=.6) + #Be a little darker than the previous boxplot\n  chapterTheme +\n  labs(x=\"Number of Lifts in 1 min (at Time 5)\", y=\"Number of Participants\")\n\n#####################################\n## @knitr Figure03_11\nggplot(dsObesity, aes(x=ObesityRate)) +\n  geom_histogram(binwidth=.01, fill=\"salmon\", color=\"gray95\", alpha=.6) + #Be a little darker than the previous boxplot\n  scale_x_continuous(label=scales::percent) + \n  chapterTheme +\n  labs(x=\"Obesity Rate (in 2011)\", y=\"Number of States\")\n\n#####################################\n## @knitr Figure03_12\nCreateFakeMeans <- function( d ) {\n  data.frame(\n    TimePoint = rep(d$TimePoint, times=d$CountMean), \n    Group = rep(d$Group, times=d$CountMean)\n)}\ndsPregnancyLongSummarizedFakeTable <- ddply(dsPregnancyLongSummarized, .variables=c(\"TimePoint\", \"Group\"), CreateFakeMeans)\noldPar <- par(mar=c(2,2,0,0))\nbar.plot.ade(x=\"TimePoint\", y=\"Group\", data=dsPregnancyLongSummarizedFakeTable, form=\"c\", b2=3, alpha=.5, legendon=\"top\", ylim=c(0, 30))\npar(oldPar)\n\n#####################################\n## @knitr Figure03_13\ngLongitudinalLifts <- ggplot(dsPregnancyLongSummarized, aes(x=TimePoint, y=CountMean, color=Group)) +\n  geom_line(size=3, alpha=.5) +\n  geom_point(size=6) +\n  scale_color_manual(values=PalettePregancyGroup) +\n  chapterTheme +\n  theme(legend.position=c(0, 1), legend.justification=c(0, 1)) +\n  theme(legend.background=element_rect(fill=\"#FFFFFF99\")) +\n  labs(x=\"Time Point\", y=\"Average Number of Lifts\")\n\ngLongitudinalLifts\n\n#####################################\n## @knitr Figure03_14\ngLongitudinalLifts + geom_line(data=dsPregnancyLong, mapping=aes(x=TimePoint, y=LiftCount,  group=SubjectID), alpha=.2, na.rm=T) \n\n#####################################\n## @knitr Figure03_15\n#Note the approach to labeling outliers will fail if there are duplicated values. See http://stackoverflow.com/questions/15181086/labeling-outliers-on-boxplot-in-r\n#See Chang (2013), Recipe 6.6.  We added (arbitrary) x-axis limits to force the box narrower. \noutlierPrevelances <- graphics::boxplot(dsSmoking$AdultCigaretteUse, plot=F)$out\noutlierLabels <- dsSmoking$State[which( dsSmoking$AdultCigaretteUse == outlierPrevelances, arr.ind=TRUE)]\n\nggplot(dsSmoking, aes(x=1, y=AdultCigaretteUse)) +\n#   geom_boxplot(width=.5, fill=\"royalblue1\", outlier.shape=1, outlier.size=4, outlier.colour=\"gray40\", alpha=.5) + \n  stat_summary(fun.data=TukeyBoxplot, geom='boxplot', width=.5, fill=\"royalblue1\", outlier.shape=1, outlier.size=4, outlier.colour=\"gray40\", alpha=.5) +\n  scale_x_continuous(breaks=NULL, limits=c(.5, 1.5)) +\n  scale_y_continuous(label=scales::percent) +\n  annotate(geom=\"text\", x=1L, y=outlierPrevelances, label=outlierLabels, hjust=-.6, color=\"gray40\") +\n  chapterTheme +\n  theme(legend.position=c(0, 1), legend.justification=c(0, 1)) +\n  labs(x=NULL, y=\"Adult Smoking Prevalence (in 2009)\")\n\n#####################################\n## @knitr Figure03_16\nggplot(dsPregnancy, aes(x=1, y=T1Lifts)) +\n#   geom_boxplot(width=.5,fill=\"royalblue4\", outlier.shape=1, outlier.size=4, outlier.colour=\"gray40\", alpha=.5, na.rm=T) +\n  stat_summary(fun.data=TukeyBoxplot, geom='boxplot', width=.5, fill=\"royalblue4\", outlier.shape=1, outlier.size=4, outlier.colour=\"gray40\", alpha=.5, na.rm=T) +\n  scale_x_continuous(breaks=NULL, limits=c(.5, 1.5)) +\n  chapterTheme +\n  theme(legend.position=c(0, 1), legend.justification=c(0, 1)) +\n  labs(x=NULL, y=\"Number of Lifts (at Time 1)\")\n\n#####################################\n## @knitr Figure03_17\n\nggplot(dsPregnancy, aes(x=Group, y=BabyWeightInKG, fill=Group)) +\n  stat_summary(fun.data=TukeyBoxplot, geom='boxplot', outlier.shape=1, outlier.size=4, outlier.colour=\"gray40\", alpha=.5) +\n  scale_fill_manual(values=PalettePregancyGroup) +\n  chapterTheme +\n  theme(legend.position=\"none\") + \n  labs(x=NULL, y=\"Baby Birth Weight (in kg)\")\n\n#####################################\n## @knitr Figure03_18\ng <- ggplot(dsPregnancy, aes(x=DeliveryMethod, y=BabyWeightInKG, fill=DeliveryMethod)) +\n#   geom_boxplot(outlier.shape=1, outlier.size=4,  alpha=.5, type=1) +  \n  stat_summary(fun.data=TukeyBoxplot, geom='boxplot', outlier.shape=1, outlier.size=4, alpha=.5) +\n  scale_fill_manual(values=PalettePregancyDelivery) +\n  chapterTheme +\n  theme(legend.position=\"none\") + labs(x=NULL, y=\"Baby Birth Weight (in kg)\")\ng\n# \n# greenScores <- sort(dsPregnancy[dsPregnancy$DeliveryMethod==\"Cesarean\", \"BabyWeightInKG\"])\n# greenScores\n# (approach1 <- quantile(greenScores))\n# (approach2 <- fivenum(greenScores))\n# \n# quantile(greenScores, type=3)\n# (approach3 <- quantile(greenScores, type=5))\n# (approach4 <- quantile(greenScores, type=6))\n# \n# #This graph is just for our exploration.\n# g + annotate(geom=\"text\", x=1, y=approach1, label=round(approach1, 3), hjust=-.1, color=\"tomato\")\n# \n# This graph is just for our exploration.\n# g + annotate(geom=\"text\", x=1, y=approach2, label=round(approach2, 3), hjust=-.1, color=\"tomato\")\n# \n# rm(g)\n# \n#####################################\n## @knitr Figure03_19\ng03_19 <- ggplot(dsPregnancy, aes(x=Group, y=T1Lifts, fill=Group)) +\n  geom_bar(stat=\"summary\", fun.y=\"mean\", na.rm=T, alpha=.7 ) +\n#   scale_y_continuous(limits = c(18, 21)) +\n  scale_fill_manual(values=PalettePregancyGroup) +\n  chapterTheme +\n  theme(legend.position=\"none\") +\n  labs(x=NULL, y=\"Mean Number of Lifts (at Time 1)\")\n\ng03_19 + coord_flip(ylim = c(18, 21))\n\n#####################################\n## @knitr Figure03_20\ng03_19 + coord_flip(ylim = c(0, 21))\n\n#####################################\n## @knitr Figure03_21\n### Possible Narration:\n### Add observed data to the existing statistical summary (ie, the bar of means).\n### This makes it obvious how the variability dwarfs the difference.\n### This could be a possible callback in a later chapter: the t's denominator dwarfs the numerator.\n\nset.seed(seed=789) #Set a seed so the jittered graphs are consistent across renders.\nggplot(dsPregnancy, aes(x=Group, y=T1Lifts, fill=Group, color=Group)) +\n  geom_bar(stat=\"summary\", fun.y=\"mean\", na.rm=T, color=NA) +\n  geom_point(position=position_jitter(w = 0.4, h = 0), na.rm=T, size=2, shape=21) +\n  scale_color_manual(values=PalettePregancyGroup) +\n  scale_fill_manual(values=PalettePregancyGroupLight) +\n  coord_flip(ylim = c(0, 1.05*max(dsPregnancy$T1Lifts, na.rm=T))) +\n  chapterTheme +\n  theme(legend.position=\"none\") +\n  labs(x=NULL, y=\"Number of Lifts (at Time 1)\")\n\n#####################################\n## @knitr Figure03_22\n### Possible Narration:\n### The number of summary layers doesn't need to stop at two.  \n### A diamond below represent the group's mean.\n\nset.seed(seed=789) #Set a seed so the jittered graphs are consistent across renders.\ngBox <- ggplot(dsPregnancy, aes(x=Group, y=T1Lifts, fill=Group, color=Group)) +\n#   stat_summary(fun.y=\"mean\", geom=\"point\", shape=23, size=5, fill=\"white\", alpha=.5, na.rm=T) + #See Chang (2013), Recipe 6.8.\n#   geom_boxplot(na.rm=T, alpha=.2, outlier.shape=NULL, outlier.colour=NA) +\n  stat_summary(fun.data=TukeyBoxplot, geom='boxplot', na.rm=T, outlier.shape=NULL, outlier.colour=NA) +\n  geom_point(position=position_jitter(w = 0.4, h = 0), size=2, shape=21, na.rm=T) +\n  scale_color_manual(values=PalettePregancyGroup) +\n  scale_fill_manual(values=PalettePregancyGroupLight) +\n  coord_flip(ylim = c(0, 1.05*max(dsPregnancy$T1Lifts, na.rm=T))) +\n  chapterTheme +\n  theme(legend.position=\"none\") +\n  labs(x=NULL, y=\"Number of Lifts (at Time 1)\")\ngBox\n\n#####################################\n## @knitr Figure03_23\nset.seed(seed=789) #Set a seed so the jittered graphs are consistent across renders.\ngBox +   stat_summary(fun.y=\"mean\", geom=\"point\", shape=23, size=5, fill=\"white\", alpha=.5, na.rm=T) #See Chang (2013), Recipe 6.8.\n#   \n# ### Possible Narration:\n# ### Compare this with Fig 3-13 (ie the second bar chart in this section).  These two small diamonds represent *every piece of information* in the bar chart.\n# ### Consider all the rich information missing from the graph below.  \n# ### If the graph is constructed sensibly, your brain can manage a more complexity that two summary points.  And so can your audience.\n# ### Both you and your audience will be benefit from a more complete representation of your study's results.\n# \n# ggplot(dsPregnancy, aes(x=Group, y=T1Lifts, fill=Group, color=Group)) +\n#   geom_bar(stat=\"summary\", fun.y=\"mean\", na.rm=T, alpha=.2, color=NA ) +\n#   stat_summary(fun.y=\"mean\", geom=\"point\", shape=23, size=5, fill=\"white\", alpha=1, na.rm=T) +\n#   scale_color_manual(values=PalettePregancyGroup) +\n#   scale_fill_manual(values=PalettePregancyGroup) +\n#   coord_flip(ylim = c(0, 1.05*max(dsPregnancy$T1Lifts, na.rm=T))) +\n#   chapterTheme +\n#   theme(legend.position=\"none\") +\n#   labs(x=NULL, y=\"Number of Lifts (at Time 1)\")\n# \n# ### Possible Narration:\n# ### Consider your audience's starting point.  DOn't just throw a bunch of layers and expect they'll understand the conventions you've chosen.\n# ### Clearly identify the elements containedin each layer, and what concept/summary/observation each layer is representing.\n# \n# ### Possible Narration:\n# ### We expect that interactive graphics will become more common in the health sciences, and that the tools will become\n# ### easier for more people to use.  We don't think they tools are ready for intro stat students yet.\n# ### Once you're more comfortable with the statistical concepts and programming required of this course, we\n# ### encourage you to investigate if interactive graphics would contribute towards communicating your research results.\n# \n# ### Possible Narration:\n# ### Choose colors consistently for the same variable *sets*, and contrastingly for different variables.\n# ### Think of the cognitive distance between variable *sets* (which is different that between factor levels, or between variables).\n",
    "created" : 1397936890563.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3807717734",
    "id" : "CE749A7E",
    "lastKnownWriteTime" : 1397926746,
    "path" : "~/GitHub/DeSheaToothakerIntroStats/Chapter03/Chapter03.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}