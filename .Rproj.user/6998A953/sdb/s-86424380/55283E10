{
    "contents" : "---\ntitle: \"Descriptives\"\noutput:\n  html_document:\n    css: ~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/www/css/thesis.css\n    fig.retina: 2\n    fig_width: 8\n    number_sections: yes\n    theme: united\n    toc: yes\n  md_document:\n    toc: yes\n    toc_depth: 3\n  pdf_document:\n    fig_caption: no\n    fig_crop: no\n    fig_width: 8\n    highlight: kate\n    latex_engine: xelatex\n    number_sections: yes\n    toc: yes\n    toc_depth: 3\n  word_document:\n    fig_width: 6.5\nmainfont: Calibri\n---\n\n\n\n<!--  Set the working directory to the repository's base directory; this assumes the report is nested inside of only one directory.-->\n```{r, echo=F, message=F} \nrequire(knitr)\nopts_knit$set(root.dir='../')  #Don't combine this call with any other chunk -especially one that uses file paths.\n\n```\n\n```{r set_options, echo=F, message=F}\nrequire(knitr)\n# getwd()\nopts_chunk$set(\n  results='show', \n  message = TRUE,\n  comment = NA, \n  tidy = FALSE,\n#   fig.height = 4.8, \n#   fig.width = 6.5, \n  out.width = NULL,\n  fig.path = 'figure_rmd/Metrics/',     \n  dev = \"png\",\n  dpi = 400\n)\nechoChunks <- FALSE\nwarningChunks<- FALSE\noptions(width=120) #So the output is 50% wider than the default.\nread_chunk(\"./Models/Descriptives/Descriptives.R\") # the file to which knitr calls for the chunks\n```\n\n*****\n\nMetrics \n===\nLabeling factors and exploring scales.   \n\n```{r DeclareGlobals, echo=F, message=FALSE, results='hide'}\n# aesDefs\n```\n\n```{r LoadPackages, echo=echoChunks, message=F}\n```\n\n```{r LoadData, echo=echoChunks, message=T}\n# select only respondence in the cross-sectional sample\n\n```\n\n## Data preliminaries\n\nInitial point of departure - the [databox][databox] of the selected variables, described in the Methods chapter.  \n![Figure 3.2](../images/databox_slice.png)\nThis [databox][databoxStatcanvas] corresponds to the dataset **dsL** produced by [Derive_dsL_from_Extract][derive] report, given in the Appendix.     \n```{r echo=T, message=T}\ndsL<-readRDS(\"./Data/Derived/dsL.rds\")\n```\n![Figure 3.3](./figure_rmd/3_Methods_Figure_3_3.png)     \n\nNote that the variable **year** serves as a natural devided between time invariant (TIvars) and time variant (TVvars) variables. All modeling operations beging with subsetting this dataset.  For the grammer rules of operations with relevant data see [Data Manipulation Guide][manipulate].\n\n\n##  Labeling Factor Levels\nReview of the item reference [cards][databoxStatcanvas] shows that initially, all items were recorded on some discrete scale, either counting occasions or assigning an intiger to a category of response. However, data were saved as numerical values or  intigers\n```{r}\nds<- dsL %>%\n  dplyr::select(\n        sample, id, sex, race, bmonth,byear, attendPR, relprefPR,relraisedPR,\n    year,\n        agemon, ageyear, famrel, attend,\n        values, todo, obeyed, pray, decisions, \n        relpref, bornagain, faith, \n        calm, blue, happy, depressed, nervous,\n        tv, computer, internet)               \nstr(ds)\n```\n\n[LabelingFactorLevels.R][labels] sourced at the end of [Derive_dsL_from_Extract][derive] matches numeric values with response labels from the questionnaire and adds to **dsL** copies of the variables, saved as labeled factors. For estimations routines such as <code>lme4</code> or graphing  functions such as <code>ggplot2</code>, the  data type (string,numeric,  factor) is a meaningful input, so a quick access to both formats frequently proves useful.  It is convenient to think that **dsL** contains only\n```{r}\nncol(dsL)/2\n```\nvariables, but each of them has a double, a labeled factor.\n```{r}\nstr(dsL)\n```\nThis give a certain flexibity in assembling needed dataset quickly and have access to factor labels. One can alternate between the raw metric and labeled factor by adding \"F\" suffix to the end of the variable name:\n```{r}\nds<- dsL %>%\n  dplyr::filter(id==25) %>%\n  dplyr::select(id,byear,year, attend,attendF)\nds\n```\nHaving quick access to factor labels will be especially useful during graph production.\n\n\n\n\n## Time metrics : Age, Period, Cohort\nNLSY97 sample includes individuals from five cohorts, born between 1980 and 1984.The following graphics shows how birth cohort, age of respondents, and round of observation are related in NSLY97.  \n![Figure 3.1](../images/APC_layout.png)\n\n\nNSLY97 contains static (**bmonth**, **byear**) and dynamic (**agemon**, **ageyear**) indicators of age : \n\n```{r age_data_25}\nds<- dsL %>% \n  dplyr::filter(id==25, year %in% c(1997:2011)) %>% \n  dplyr::select(id,byear,bmonthF,year,agemon,ageyear)\nprint(ds)\n```\n\nWhen transforming the metric of time, and using biological age instead of year of measurement as the temporal dimension, the value of age at the time of the interview will be computed as **age** = **agemon**/12  \n\n```{r age_data_25_2}\nds<- dsL %>% \n  dplyr::filter(id==25, year %in% c(1997:2011)) %>% \n  dplyr::select(id,bmonthF,byear,year, agemon,ageyear) %>%\n  dplyr::mutate (age =  agemon/12)\nprint(ds)\n```\n\n## Attendance  \n\nNLSY97 asked to report church attendance (**attend**)for the past 12 months preceding the interview date. The response offered a choice of 7 categories ordered by magnitude.   \n\n```{r attend_2000_copy, echo=echoChunks, message=T, fig.height=3.5,fig.cap=\"Figure caption test\"}\nds<- dsL %>%  dplyr::filter(year==2000,sample==1)\np<-ggplot(ds, aes(x=attendF, fill=attendF))\np <- p + geom_bar(color=\"black\")\np <- p + scale_fill_manual(values=attendCol8, na.value=NACol, guide=FALSE)\np <- p + coord_flip()\n# p <- p + guides(fill = guide_legend(reverse=TRUE, title=\"Attendence\")) #http://www.cookbook-r.com/Graphs/Legends_(ggplot2)/#reversing-the-order-of-items-in-the-legend\np <- p + labs(title=\"How often have you attended a worship service (2000)?\", x=\"Church attendance\", y=\"Count\")\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n\n```\n\nDescriptives\n===\nBasic descriptives reports on selected NLSY97 items\n\n## Basic demographics \nA clean dataset **dsL** contains data on\n\n```{r}\ndplyr::summarize(dsL,N=n_distinct(id))\n```\nrespondents. Of them one (id = 467) was removed from the dataset due to abberant age score that seemed as a coding mistake. NLSY97 contains representative household sample and the oversample of racial minorities. \n\n```{r, warning=F}\nds<- dsL %>% \n  dplyr::group_by(sampleF) %>% \n  dplyr::summarize (count=n_distinct(id))\nds\n```\n\n```{r basic_demo, echo=F, message=F, warning=F, fig.height=4.2}\nds<- dsL %>% dplyr::filter(id %in% c(1:9000), year==1997) %>% dplyr::select(id,sampleF,sexF, raceF) %>%\n  dplyr::group_by(sampleF, sexF,raceF) %>% dplyr::summarize (count= n()) \n\n# ds<- reshape2::melt(ds,id.vars= colnames(ds))\n# ds\np<- ggplot(ds, aes(x=raceF, y=count, fill=sexF))\n#geoms\np<- p+ geom_bar(stat=\"identity\", position=\"dodge\")\np<- p+ facet_grid(sampleF~.)\np<- p+ geom_text(aes(label=count), position=position_dodge(.9), vjust=-.2, size=3.5)\n# scales\np<- p + scale_y_continuous( limits= c(0,2700))\n# annotations\np<- p + guides(fill = guide_legend( title=\"Sex\")) \np<- p+ labs(title = \"Basic demographic constitution of NLSY97\",\n                         x=\"Race\",\n                         y=\"Sampling frame\")\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np\n```\n\n\n## Distribution of age variables\nThe age of respondents was of particular interest and was entered as a predictor of the model outcome. NSLY97 contains static and dynamic indicators of age age. Variables  byear and bmonth were recorded once in 1997 (static) and contain respondentsâ€™ birth year and birth month respectively. Two age variables were recorded continuously at each interview (dynamic): age at the time of the interview in months agemon and in years ageyear.   Next graph shows how births in the NLSY97 sample (static age) was distributed over calendric months from 1980 to 1984:\n\n### Months of births\n```{r bmonth_dist, echo=F, warning=F, fig.height=3.3}\nds<- dsL %>% dplyr::filter(year %in% c(1997)) %>% \n  dplyr::select(id,year,byearF,bmonth,agemon,ageyear) %>%\n  dplyr::group_by(bmonth,byearF) %>%\n  dplyr::summarize(count=n()) %>% arrange(byearF,bmonth) %>%\n  dplyr::mutate (born=paste0(substr(byearF,3,4),\"-\",bmonth)) %>%\n  dplyr::arrange(byearF, bmonth)\np<-ggplot(ds, aes(x=born, y=count, fill=byearF))\n#geoms \np<-p+geom_bar(stat=\"identity\")\n  p<- p + scale_fill_manual(values=byearCol5)\n# annotations\np<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Birth year\")) \np<-  p+ labs(title = \"Distribution of births among NLSY97 repsondent (1997)\",\n                         x=\"The month of birth\",\n                         y=\"Count\")\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=8))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np<- p + theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))\np\n```\n\n\n### Age and cohort structure \n```{r agemon_dist, echo=F, warning=F, fig.height=3.3}\nds<- dsL %>% dplyr::filter(id %in% c(1:19000), year %in% c(2000)) %>% dplyr::select(id,year,byearF,attend,agemon,ageyear) %>%\n  mutate(time=year-2000, age=agemon/12)\n\n  p<-ggplot(ds, aes(x=agemon, fill=byearF))\n  p<-p+geom_bar(bin=1)\n  p<- p + scale_fill_manual(values=byearCol5)\n# annotations\np<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Birth year\")) \np<-  p+ labs(title = \"Age and cohort structure\",\n                         x=\"Age in months at the time of interview in 2000\",\n                         y=\"Count\")\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```\n\nAttendance\n===\nMapping church attendance in time\n\n## Cross-Sectional View  \n\nThe focal variable of interest is **attend**, the item measuring church attendance for the year that preceded the interview date. The questionnaire recorded the responses on the ordinal scale.  \n\n```{r attend_2000, echo=echoChunks, message=T, fig.height=3.5,fig.cap=\"Figure caption test\"}\nds<- dsL %>%  dplyr::filter(year==2000,sample==1)\np<-ggplot(ds, aes(x=attendF, fill=attendF))\np <- p + geom_bar(color=\"black\")\np <- p + scale_fill_manual(values=attendCol8, na.value=NACol, guide=FALSE)\np <- p + coord_flip()\n# p <- p + guides(fill = guide_legend(reverse=TRUE, title=\"Attendence\")) #http://www.cookbook-r.com/Graphs/Legends_(ggplot2)/#reversing-the-order-of-items-in-the-legend\np <- p + labs(title=\"How often have you attended a worship service (2000)?\", x=\"Church attendance\", y=\"Count\")\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n\n```\n\nCreating frequency distributions for each of the measurement wave we have:    \n\n```{r attend_2000_2011, echo=echoChunks,warning=F, message=F, fig.height=3.5}\nds<- dsL %.%\n  dplyr::filter(sample==1) %.%   # comment out to count NA in the total\n  dplyr::group_by(yearF,attendF) %.%\n  dplyr::summarize(count = length( attendF)) %.%\n  dplyr::mutate(total = sum(count),\n              percent= count/total)\n# head(ds,10)\np<- ggplot( ds, aes(x=yearF, y=percent, fill=attendF))  #  keeping NA in calculations\n# geoms\np<- p+ geom_bar(position=\"stack\", stat=\"identity\")\n# scales\np<- p+ scale_fill_manual(values = attendCol8)\np<- p+ scale_y_continuous(limits=c(0, 1),\n                          breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1))\np<- p+ scale_x_discrete(limits=as.character(c(2000:2011)))\n# annotations\np<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Response category\")) \np<-  p+ labs(title = \"In the past year, how often have you attended a worship service?\",\n                         x=\"Wave of measurement\",\n                         y=\"Proportion of total\")\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```\n\nHere, missing values are used in the calculation of total responses to show the natural attrition in the study. Assuming that attrition is not significantly associated with  the outcome measure, we can remove missing values from the calculation of the total and look at prevalence of response endorsements over time.     \n\n```{r attend_2000_2011_na,echo=F, message=F, warning=F, fig.height=3.5}\nds<- dsL %.%\n  dplyr::filter(sample==1, !is.na(attendF)) %.%   # comment out to count NA in the total\n  dplyr::group_by(yearF,attendF) %.%\n  dplyr::summarize(count = length( attendF)) %.%\n  dplyr::mutate(total = sum(count),\n              percent= count/total)\n# head(ds,10)\np<- ggplot( ds, aes(x=yearF, y=percent, fill=attendF))  #  keeping NA in calculations\n# geoms\np<- p+ geom_bar(position=\"stack\", stat=\"identity\")\n# scales\np<- p+ scale_fill_manual(values = attendCol8)\np<- p+ scale_y_continuous(limits=c(0, 1),\n                          breaks=c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1))\np<- p+ scale_x_discrete(limits=as.character(c(2000:2011)))\n# annotations\np<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Response category\")) \np<-  p+ labs(title = \"In the past year, how often have you attended a worship service?\",\n                         x=\"Wave of measurement\",\n                         y=\"Proportion of total\")\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```\n\n### Change in prevalences\nTracing the rate of change of prevalence in a line graph, we see more clearly which  categores increase over time (e.g. \"Never\"), which decline (e.g. \"\"About once/week), and which stay relatively stable (e.g. \"About twice/month\").    \n\n```{r attend_freq_lines, echo=F, message=F, warning=F, fig.height=4.2}\nds<- dsL %.%\n  dplyr::filter(sample==1, year %in% c(2000:2011), !is.na(attend)) %.%   # comment out to count NA in the total\n  dplyr::group_by(yearF,attendF) %.%\n  dplyr::summarize(count = length( attendF)) %.%\n  dplyr::mutate(total = sum(count),\n              percent= count/total)\n# head(ds,10)\np<- ggplot( ds, aes(x=yearF, y=percent, color=attendF))  #  keeping NA in calculations\n# geoms\np<- p+ geom_line(aes(group=attendF), stat=\"identity\", size=.7)\np<- p+ geom_point(aes(fill=attendF), shape=21, size=3, color=\"black\",position=position_dodge(0.2) )\n# scales\np<- p+ scale_color_manual(values = attendCol8,na.value=NACol)\np<- p+ scale_fill_manual(values = attendCol8,na.value=NACol)\np<- p+ scale_y_continuous(limits=c(0, .4),\n                          breaks=c(0,.1,.2,.3,.4))\np<- p+ scale_x_discrete(limits=as.character(c(2000:2011)))\n# # annotations\np<- p + guides(fill = guide_legend(reverse=FALSE, title=\"Response category\")) \np<- p + guides(color = FALSE) \np<-  p+ labs(title = \"In the past year, how often have you attended a worship service?\",\n                         x=\"Wave of measurement\",\n                         y=\"Proportion of total\")\n# # themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```\n\n### Prevalence change and race \n\nInspecting the prevalence trajectories across races.   \n\n```{r attend_freq_lines_race, echo=F, message=F, warning=F, fig.height=7, fig.width=10}\nds<- dsL %.%\n  dplyr::filter(year %in% c(2000:2011), !is.na(attend), race !=3) %.%   # comment out to count NA in the total\n  dplyr::group_by(sampleF,yearF,raceF,attendF) %.%\n  dplyr::summarize(count = n()) %.%\n  dplyr::mutate(total = sum(count),\n                percent= count/total)\n\np<- ggplot( ds, aes(x=yearF, y=percent, color=attendF)) \n# geoms\np<- p+ geom_line(aes(group=attendF), stat=\"identity\", size=.4)\np<- p+ geom_point(aes(fill=attendF), shape=21, size=2, color=\"black\",linesize=1,position=position_dodge(0.2) )\np<- p+ facet_grid(sampleF ~ raceF)\n# scales\np<- p+ scale_color_manual(values = attendCol8,na.value=NACol)\np<- p+ scale_fill_manual(values = attendCol8,na.value=NACol)\np<- p+ scale_y_continuous(limits=c(0, .5),\n                          breaks=c(0,.1,.2,.3,.4,.5))\np<- p+ scale_x_discrete(limits=as.character(c(2000:2011)))\n# # annotations\np<- p + guides(fill = guide_legend(reverse=FALSE, title=\"Response category\")) \np<- p + guides(color = FALSE) \np<-  p+ labs(title = \"In the past year, how often have you attended a worship service?\",\n             x=\"Wave of measurement\",\n             y=\"Proportion of total\")\n# # themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np <- p + ggplot2::theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=8))\np\n```\n\n```{r attend_race_2000, echo=F, message=F, warning=F, fig.height=5, fig.width=10}\nds<- dsL %.%\n  dplyr::filter(year %in% c(2000), !is.na(attend), race !=3) %.%   # comment out to count NA in the total\n  dplyr::group_by(sampleF,yearF,raceF,attendF) %.%\n  dplyr::summarize(count = n()) %.%\n  dplyr::mutate(total = sum(count),\n                percent= count/total)\n# ds\np<- ggplot( ds, aes(x=attendF, y=percent, fill=attendF)) \n# geoms\np<- p+ geom_bar(stat=\"identity\")\np<- p+ facet_grid(sampleF ~ raceF)\np<- p+ geom_text(aes(label=round(percent,2)), position=position_dodge(.9), vjust=-.2, size=3.5)\n# scales\n\np<- p+ scale_fill_manual(values = attendCol8,na.value=NACol)\np<- p+ scale_y_continuous(limits=c(0, .3),\n                          breaks=c(0,.1,.2,.3,.4,.5))\n# # annotations\np<- p + guides(fill = guide_legend(reverse=FALSE, title=\"Response category\")) \np<- p + guides(color = FALSE) \np<-  p+ labs(title = \"In the past year(2000), how often have you attended a worship service?\",\n             x=\"Church attendance\",\n             y=\"Proportion of total\")\n# # themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np <- p + ggplot2::theme(axis.text.x = element_blank())\np\n```\n\n\n## Longitudinal View\n\nGraphs above shows change in the cross-sectional distribution of responses over the years. Modeling the change in these response frequencies is handled well by Markov  models.  LCM, however, works with longitudinal data, modeling the trajectory of each individual and treating attendance as a continuous outcome.   \n\nTo demonstrate mapping of individual trajectories to time, let's select a  dataset that would include personal identifyer (**id**), cohort indicator (**byear**), wave of measurement (**year**) and the focal variable of interest - worship attendance (**attend**).    \n\n```{r, echo=T, message=F, warning=warningChunks}\nds<- dsL %>%  dplyr::filter(year %in% c(2000:2011), id==47) %>%\n              dplyr:: select(id, byear, year, attend, attendF)\nprint(ds)\n```\n\nThe view above lists attendance data for subjust with id = 47. Mapping his attendance to time we have  .  \n\n```{r attend_line_1id,echo=echoChunks, message=F, warning=warningChunks, fig.height=3.3 }\nds<- dsL %>% dplyr::filter(id==47,year %in% c(2000:2011)) %>% dplyr::select(idF,year,attend) %>%\n  mutate(time=year-2000)\n\np<-ggplot(ds, aes(x=time,y=attend, color=idF))\np<-p+ geom_line(size=.4)\np<-p+ geom_point(size=2)\np<-p+ scale_y_continuous(\"Church attendance\",\n                     limits=c(0, 8),\n                     breaks=c(1:8))\np<-p+ scale_x_continuous(\"Years since 2000\",\n                   limits=c(0,11),\n                   breaks=c(0:11))\np <- p + scale_color_manual(values=c(\"purple\"))\n# annotations\np<-p+ labs(title=paste0(\"In the past year, how often have you attended a worship service?\"))\np <- p + guides(color = guide_legend(title=\"Respondents\"))\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```  \n\nwhere vertical dimension maps the outcome value and the horizontal maps the time. There will be a trajecory for each of the respondents. Each of such trajectories imply a story, a life scenario. Why one person grows in his religious involvement, while other declines, or never develops an interest in the first place? To demostrate how interpretations of trajectories can vary among individuals consider the following example.     \n\n### Attendance over waves \nAttendance trajectories of subjects with **id**s  4, 25, 35, and 47 are plotted in the next graph     \n\n```{r attend_line_4id_years,echo=echoChunks, message=F, warning=F, fig.height=3.3}\nds<- dsL %>% dplyr::filter(id %in% c(4,25,35,47),year %in% c(2000:2011)) %>% dplyr::select(idF,year,attend) %>%\n  mutate(time=year-2000)\np<-ggplot(ds, aes(x=time,y=attend, color=idF))\n# geoms\np<-p+ geom_line(size=.4)\np<-p+ geom_point(size=2, position=position_dodge(0.2))\n# scales\np<-p+ scale_y_continuous(\"Church attendance\",\n                     limits=c(0, 8),\n                     breaks=c(1:8))\np<-p+ scale_x_continuous(\"Years since 2000\",\n                   limits=c(0,11),\n                   breaks=c(0:11))\np <- p + scale_color_manual(values=c(\"black\",\"red\",\"green\", \"purple\"))\n# annotations\np<-p+ labs(title=paste0(\"In the past year, how often have you attended a worship service?\"))\np <- p + guides(color = guide_legend(title=\"Respondents\"))\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n\n```\n\nThe respondent  **id** = 35 reported attending no worship services in any of the years, while respodent **id** = 25 seemed to frequent it, indicating weekly attendance in 8 out of the 12 years. Individual **id** = 47 started as a fairly regular attendee of religious services in 2000 (5 = \"about twice a month\"), then gradually declined his involvement to nill in 2009 and on. Respondent **id** = 4, on the other hand started off with a rather passive involvement, reporting  attended church only \"Once or twice\"  in 2000,  maintained a low level of participation throughout the years, only to surge his attendance in 2011.  Latent curve models will describe intraindividual trajectories of change, while summarizinig the interindividual similarities and trends.    \n\n### Changing the metric of time  \nPrevious research in religiousity indicated that age might be one of the primary factors explaining interindividual differences in church attendance. To examine the role of age, we change the metric of time from waves of measurement, as in the previous graph, to biological age. Consult [Metrics][metrics] report for details on measurement of age. \n```{r comparing_age, warning=F }\nds<- dsL %>% dplyr::filter(id %in% c(4,25,35,47),year %in% c(2000:2011)) %>% \n  dplyr::select(idF,byear,bmonth,year,ageyear,agemon) %.%\n  dplyr::mutate(time=year-2000, age=agemon/12)\nprint(ds[ds$idF==25,])\n```\n\n## Attendance over ages  \nPlotting individual trajectories, with age as the metric of time.  \n\n```{r attend_line_4id_age3,echo=echoChunks, message=F, error=FALSE, warning=FALSE, fig.height = 3.3 }\nds<- dsL %>% dplyr::filter(id %in% c(4,25,35,47),year %in% c(2000:2011)) %>% \n  dplyr::select(idF,byear,bmonth,year,ageyear,agemon,attend) %.%\n  dplyr::mutate(time=year-2000, age=agemon/12)\n\np<-ggplot(ds, aes(x=age,y=attend, color=idF))\n# geoms\np<- p + geom_line(size=.4)\np<- p + geom_point(size=2, position=position_dodge(0.2))\n# scales\np<- p + scale_y_continuous(\"Church attendance\",\n                     limits=c(0, 8),\n                     breaks=c(1:8))\np<- p + scale_x_continuous(\"Age in years\",\n                   limits=c(16,31),\n                   breaks=seq(from=12, to=31,by=1))\np <- p + scale_color_manual(values=c(\"black\",\"red\",\"green\", \"purple\"))\n# annotations\np<-  p + labs(title=paste0(\"In the past year, how often have you attended a worship service?\"))\np<-  p + guides(color = guide_legend(title=\"Respondents\"))\np<-  p + geom_point(position=position_dodge(0.2) )\n# themes\np <- p + ggplot2::theme_bw()\np <- p + ggplot2::theme_bw(base_size=baseSize)\np <- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np <- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np <- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\np <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\np\n```\n\nData Manipulation Guide\n===\n\nDemonstrating the language of data manipulation in <code>dplyr</code> packages using  **dsL** as an example\n\n<!-- Run this three chunks to get to the starting point -->\n```{r DeclareGlobals, echo=echoChunks, message=FALSE}\n```\n\n```{r LoadPackages, echo=echoChunks, message=F}\n```\n\n```{r LoadData, echo=echoChunks, message=FALSE}\n```\n\n\n## Five basic functions in data handling\n\nFor a more detailed discussion of basic verbs and operations consult the [R-Studio guide][1] or internal [vignette][2]\n```{r,eval=FALSE}\nvignette(\"introduction\",package=\"dplyr\")\n```\n\nThe following is a brief demonstration of <code>dplyr</code> syntax using **dsL** dataset as an example. I attach prefix <code>dplyr::</code> to avoid possible conflicts with <code>plyr</code> package on which <code>ggplot2</code> package relies. I recommend such practice in all <code>dplyr</code>  expressions in sharable publications.  \n\nOne of the innovations in <code>dplyr</code> is the ability to chain phrases in the data manipulationsentence. The operator <code>%>%</code> (or <code>%.%</code>), accomplishes this, turning <code>x %>% f(y)</code> into <code>f(x, y) </code>.   \n\n\n###<code>select()</code> \nselects variables into a smaller data set\n```{r}\nds<-dsL\ndim(ds)\nds<- dsL %>%\n  dplyr::select(id,year, byear, attend, attendF)\nhead(ds,13)\ndim(ds)\n```\n\n###<code>filter()</code> \nRemoves observations that do not meet criteria. The following code selects observation based on the type of sample    \n\n```{r, echo=F}\nds<- dsL %>%\n  dplyr::filter(id %in% c(1, 6803) & year==2000 ) %>%\n  dplyr::select(sample, sampleF)\nds\n```\nand only between years 2000 and 2011, as only during those years the outcome of interest <code>attend</code> was recorded. \n```{r, echo=T, message=F}\nds<- dsL %>%\n  dplyr::filter(sample==1, year %in% c(2000:2011))%>%\n  dplyr::select(id, year, attend, attendF)\nhead(ds,13)\n```\n\n\n###<code>arrange()</code> \nSorts observations\n```{r, echo=T, message=F}\nds<- dsL %>%\n  dplyr::filter(sample==1, year %in% c(2000:2011)) %>%\n  dplyr::select(id, year, attend) %>%\n  dplyr::arrange(year, desc(id))\nhead(ds,13)\nds<- dplyr::arrange(ds, id, year)\nhead(ds, 13)\n```\n\n\n###<code>mutate()</code> \n\nCreates additional variables from the values of existing.\n```{r, echo=T, message=F}\nds<- dsL %>%\n  dplyr::filter(sample==1, year %in% c(2000:2011)) %>%\n  dplyr::select(id, byear, year, attend) %>%\n  dplyr::mutate(age = year-byear, \n                timec = year-2000,\n                linear= timec,\n                quadratic= linear^2,\n                cubic= linear^3)\nhead(ds,13)\n```\n\n###<code>summarize()</code> \ncollapses data into a single value computed according to the aggregate functions.\n\n\n```{r}\nrequire(dplyr)\nds<- dsL %>%\n  dplyr::filter(sample==1) %>%\n  dplyr::summarize(N= n_distinct(id))\nds\n```\nOther functions one could use with <code>summarize()</code> include:\n\nFrom <code>base</code>   \n\n+ <code> min() </code>   \n+ <code> max() </code>   \n+ <code> mean() </code>   \n+ <code> sum() </code>   \n+ <code> sd() </code>   \n+ <code> median() </code>   \n+ <code> IQR()  </code>   \n\nNative to <code>dplyr</code>    \n\n+ <code> n() </code>  -  number of observations in the current group   \n+ <code> n_distinct(x) </code>  -    count the number of unique values in x.    \n+ <code> first(x) </code>  -  similar to <code>x[ 1 ]</code> + control over <code>NA</code>      \n+ <code> last(x) </code>  -  similar to <code>x[length(x)] </code> + control over <code>NA</code>      \n+ <code> nth(x, n)  </code>  -  similar to<code> x[n] </code>  + control over <code>NA</code>     \n\n## Grouping and Combining \nThe function <code>group_by()</code> is used to identify groups in split-apply-combine (SAC) procedure: it splits the initial data into smaller datasets (according to all possible interactions between the levels of supplied variables). It is these smaller datasets that <code>summarize()</code> will individually collapse into a single computed value according to its formula.  \n```{r, echo=T, message=F}\nds<- dsL %>%\n  dplyr::filter(sample==1, year %in% c(2000:2011)) %>%\n  dplyr::select(id, year, attendF) %>%\n  dplyr::group_by(year,attendF) %>%\n  dplyr::summarise(count = n()) %>%\n  dplyr::mutate(total = sum(count),\n              percent= count/total)\nhead(ds,10)\n\n```\n\nTo verify :\n```{r, echo=T, message=F}\ndplyr::summarize( filter(ds, year==2000), should.be.one=sum(percent))\n```\n\n\n## Base subsetting\nGenerally, we can compose any desired dataset by using matrix calls. The general formula is of the form:\n**ds**[  _rowCond_  ,  _colCond_  ], where **ds** is a dataframe, and  _rowCond_ and _colCond_ are conditions for including rows and columns of the new dataset, respectively. One can also call a variable by attaching <code> $ </code> followed variable name to the name of the dataset:    <code>**ds**_$variableName_</code>. \n```{r, echo=T}\nds<-dsL[dsL$year %in% c(2000:2011),c('id',\"byear\",\"year\",\"agemon\",\"attendF\",\"ageyearF\")]\nprint(ds[ds$id==1,]) \n```\n\nThe following is a list of operatiors that can be used in these calls. \n<ul>\n<li>basic math operators: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%%</code>, <code>^</code></li>\n<li>math functions: <code>abs</code>, <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atan2</code>,\n<code>atanh</code>, <code>ceiling</code>, <code>cos</code>, <code>cosh</code>, <code>cot</code>, <code>coth</code>, <code>exp</code>, <code>floor</code>,\n<code>log</code>, <code>log10</code>, <code>round</code>, <code>sign</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, <code>tanh</code></li>\n<li>logical comparisons: <code>&lt;</code>, <code>&lt;=</code>, <code>!=</code>, <code>&gt;=</code>, <code>&gt;</code>, <code>==</code>, <code>%in%</code></li>\n<li>boolean operations: <code>&amp;</code>, <code>&amp;&amp;</code>, <code>|</code>, <code>||</code>, <code>!</code>, <code>xor</code></li>\n<li>basic aggregations: <code>mean</code>, <code>sum</code>, <code>min</code>, <code>max</code>, <code>sd</code>, <code>var</code></li>\n</ul>\n\n<code>dplyr</code> can translate all of these into SQL. For more of on <code>dplyr</code> and SQL compatibility consult another built-in [vignette][3]\n```{r,eval=FALSE}\nvignette(\"database\",package=\"dplyr\")\n```\n\n## Base Reference\n\nThe following unary and binary operators are defined for <code> base</code>. They are listed in precedence groups, from highest to lowest.\n\n\n+ <code> :: :::   </code> -  access variables in a namespace  \n+ <code> $ @      </code> - component / slot extraction   \n+ <code> [ [[\t    </code> - indexing  \n+ <code> ^\t      </code>  - exponentiation (right to left)   \n+ <code> - +\t </code>  - unary minus and plus   \n+ <code> :\t </code>  - sequence operator   \n+ <code> %any%\t </code>  - special operators (including %% and %/%)   \n+ <code> * /\t </code>  - multiply, divide   \n+ <code> + -\t </code>  - (binary) add, subtract   \n+ <code> < > <= >= == !=\t </code>  - ordering and comparison   \n+ <code> !\t </code>  - negation   \n+ <code> & &&\t </code>  - and   \n+ <code> | ||\t </code>  - or   \n+ <code> ~\t </code>  - as in formulae   \n+ <code> -> ->>\t </code>  - rightwards assignment   \n+ <code> <- <<-\t </code>  - assignment (right to left)   \n+ <code> =\t </code>  - assignment (right to left)   \n+ <code> ?\t </code>  - help (unary and binary)   \n\n\n```{r child, child = 'Descriptives/Citations.Rmd'}\n\n```\n",
    "created" : 1404104629607.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2219763461",
    "id" : "55283E10",
    "lastKnownWriteTime" : 1404114085,
    "path" : "~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/Models/Appendix.Rmd",
    "project_path" : "Models/Appendix.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}