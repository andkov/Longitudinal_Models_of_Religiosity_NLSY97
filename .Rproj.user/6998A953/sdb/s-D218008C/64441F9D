{
    "contents" : "\n###################################\n### Reproducible Research\n###################################\n# When executed by R, this file will manipulate the original data sources (ie, ZZZZ)\n# to produce a groomed dataset suitable for analysis and graphing.\n\n###################################\n# Clear memory from previous runs\nbase::rm(list=base::ls(all=TRUE))\n\n###################################\n# Verify the working directory has been set correctly.  Much of the code assumes the working directory is the repository's root directory.\n# In the following line, rename `RAnalysisSkeleton` to your repository.\nif( base::basename(base::getwd()) != \"RAnalysisSkeleton\" ) {\n  base::stop(\"The working directory should be set to the root of the package/repository.  \",\n       \"It's currently set to `\", base::getwd(), \"`.\")\n}\n###################################\n# Install the necessary packages.\npathInstallPackages <- \"./UtilityScripts/InstallPackages.R\"\nif( !file.exists(pathInstallPackages)) {\n  base::stop(\"The file `\", pathInstallPackages, \"` was not found.  Make sure the working directory is set to the root of the repository.\")\n}\nbase::source(pathInstallPackages, local=new.env()) \n\nbase::rm(pathInstallPackages)\n###################################\n# Load the necessary packages.\nbase::require(base)\nbase::require(knitr)\nbase::require(markdown)\nbase::require(testit)\n\n\n# #########################################################################################################\n# ####\n# #### The following example comes from https://github.com/wibeasley/Wats.  Rename the paths appropriately.\n# ####\n# \n# \n# ###################################\n# # Declare the paths of the necessary files.\n# \n# # The raw/input data files:\n# pathCensus199x <- base::paste0(\"./Datasets/CensusIntercensal/STCH-icen199\", 0:9, \".txt\")\n# pathCensus200x <- \"./Datasets/CensusIntercensal/CO-EST00INT-AGESEX-5YR.csv\"\n# pathCountyFips <- \"./Datasets/CountyFipsCode.csv\"\n# \n# # The derived/intermediate data files (which are produced by the repository's code files):\n# pathCensusYearly <- \"./Datasets/CensusIntercensal/CensusCountyYear.csv\"\n# pathCensusMonthly <- \"./Datasets/CensusIntercensal/CensusCountyMonth.csv\"\n# pathDataForAnalaysis2005 <- \"./Datasets/CountyMonthBirthRate2005Version.csv\"\n# pathDataForAnalaysis2014 <- \"./Datasets/CountyMonthBirthRate2014Version.csv\"\n# \n# # Code Files:\n# pathManipulateCensus <- \"./UtilityScripts/IsolateCensusPopsForGfr.R\"\n# pathCalculateGfr <- \"./UtilityScripts/CalculateGfr.R\"\n# \n# #Report Files:\n# pathsReports <- base::file.path(\"./vignettes\", c(\"MbrFigures.Rmd\", \"OkFertilityWithIntercensalEstimates.Rmd\"))\n# \n# ###################################\n# # Verify the necessary path can be found.\n# \n# # The raw/input data files:\n# testit::assert(\"The 10 census files from 199x should exist.\", base::file.exists(pathCensus199x))\n# testit::assert(\"The 200x census file should exist.\", base::file.exists(pathCensus200x))\n# testit::assert(\"The county FIPS values should exist.\", base::file.exists(pathCountyFips))\n# \n# # Code Files:\n# testit::assert(\"The file that restructures the census data should exist.\", base::file.exists(pathManipulateCensus))\n# testit::assert(\"The file that calculates the GFR should exist.\", base::file.exists(pathCalculateGfr))\n# \n# #Report Files:\n# testit::assert(\"The knitr Rmd files should exist.\", base::file.exists(pathsReports))\n# \n# ###################################\n# # Run the files that manipulate and analyze.\n# \n# # Execute code that restructures the Census data\n# base::source(pathManipulateCensus, local=base::new.env())\n# \n# # Assert that the intermediate files exist (the two files produced by `IsolateCensusPopsForGfr.R`)\n# testit::assert(\"The yearly records should exist.\", base::file.exists(pathCensusYearly))\n# testit::assert(\"The monthly records should exist.\", base::file.exists(pathCensusMonthly))\n# \n# #Execute code that combines the census and birth count data.\n# base::source(pathCalculateGfr, local=base::new.env())\n# \n# # Verify that the two human readable datasets are present.\n# testit::assert(\"The CSV for the 2005 Version should exist.\", base::file.exists(pathDataForAnalaysis2005))\n# testit::assert(\"The CSV for the 2014 Version should exist.\", base::file.exists(pathDataForAnalaysis2014))\n# \n# ###################################\n# # Build the reports\n# for( pathRmd in pathsReports ) {\n#   pathMd <- base::gsub(pattern=\".Rmd$\", replacement=\".md\", x=pathRmd)\n#   pathHtml <- base::gsub(pattern=\".Rmd$\", replacement=\".html\", x=pathRmd)\n#   knitr::knit(input=pathRmd, output=pathMd)\n#   markdown::markdownToHTML(file=pathMd, output=pathHtml)\n# }\n",
    "created" : 1398188096594.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2564446001",
    "id" : "64441F9D",
    "lastKnownWriteTime" : 1397936650,
    "path" : "~/GitHub/RAnalysisSkeleton/UtilityScripts/Reproduce.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}