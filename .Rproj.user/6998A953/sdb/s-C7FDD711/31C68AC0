{
    "contents" : "---\ntitle: \"Introduction to LCM\"\noutput:\n  html_document:\n    css: ~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/www/css/thesis.css\n    fig.retina: 2\n    fig_width: 8\n    theme: united\n    toc: yes\n  md_document:\n    toc: yes\n    toc_depth: 3\n  pdf_document:\n    fig_caption: no\n    fig_crop: no\n    fig_width: 8\n    highlight: tango\n    latex_engine: xelatex\n    number_sections: yes\n    toc: yes\n    toc_depth: 3\n  word_document:\n    fig_width: 6.5\nmainfont: Calibri\nfontsize: 14pt\n---\n\n\n<!--  Set the working directory to the repository's base directory; this assumes the report is nested inside of only one directory.-->\n```{r, echo=F, message=F} \nrequire(knitr)\nopts_knit$set(root.dir='../../')  #Don't combine this call with any other chunk -especially one that uses file paths.\n\n```\n\n```{r set_options, echo=F, message=F}\nrequire(knitr)\n# getwd()\nopts_chunk$set(\n  results='show', \n  message = TRUE,\n  comment = NA, \n  tidy = FALSE,\n#   fig.height = 4.8, \n#   fig.width = 6.5, \n  out.width = NULL,\n  fig.path = 'figure_rmd/IntroLCM/',     \n  dev = \"png\",\n  dpi = 400\n)\nechoChunks <- FALSE\nwarningChunks<- FALSE\noptions(width=120) #So the output is 50% wider than the default.\nread_chunk(\"./Models/Descriptives/Descriptives.R\") # the file to which knitr calls for the chunks\n```\n\n```{r DeclareGlobals, echo=echoChunks, message=FALSE, results='hide'}\n```\n\n```{r LoadPackages, echo=echoChunks, message=F}\n```\n\n```{r LoadData, echo=echoChunks, message=T}\n# rm(list=ls(all=TRUE))  \n# dsL<-readRDS(file.path(getwd(),\"Data/Derived/dsL.rds\"))\n# source(file.path(getwd(),\"Models/Descriptives/AesDefine.R\"))\n\n```\n\nWe can retrieve data for a single person using <code>id</code>\n```{r, echo=T, message=T}\nds<- dsL %>% \n  dplyr::filter(id==7499,year %in% c(2000:2011)) %>% \n  dplyr::mutate(time=year-2000) %>%\n  dplyr::select(id,year,attendF,attend, time) \nprint(ds)\n```\n\n\n```{r, echo=F}\n\nds<- dsL %>% \n  dplyr::filter(id==7499,year %in% c(2000:2011)) %>% \n  dplyr::select(id,year,attend,attendF) %>% \n  dplyr::mutate(time=year-2000)\n\n# canvas\np<-ggplot(ds, aes(x=time,y=attend))\n# geoms\np<- p+ geom_point(aes(fill=attendF), size=3.5, shape=21)\np<- p+ geom_line(aes(group=id), alpha=.6, linetype=2, size=.5)\n# scales\np<- p+ scale_fill_manual(values=attendCol8)\np<- p+ scale_y_continuous(\"Church attendance\",\n                     limits=c(0, 8),\n                     breaks=c(1:8))\np<- p+ scale_x_continuous(\"Years since 2000\",\n                   limits=c(0,11),\n                   breaks=c(0:11))\n# annotations\np<- p + labs(title=paste0(\"In the past year, how often have you attended a worship service?\"))\np<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Response category\")) \n# # themes\np<- p + ggplot2::theme_bw()\np<- p + ggplot2::theme_bw(base_size=baseSize)\np<- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \np<- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\np<- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\np<- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\ntrajD <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\ntrajD # trajectory from Data\n```\n\nAlternatively, we can enter data manually, if we want to work with artificial trajectories\n```{r, eval=FALSE}\n    id=rep(1,12) \n    year=seq(2000,2011,1)\n    attend= c(6,7,7,6,4,3,2,1,1,1,2,2)\n    attendF=ordered(attend,\n            levels= unique(dsL$attend,is.na=T),\n            labels=levels(dsL$attendF))\n    time= year - 2000\nds<-data.frame(id,year,attendF, attend, time)\nprint(ds)\n```\n\n```{r, echo=F, eval=F}\n# # Alternatively, for posting code online\n# ds <- read.table(header = TRUE, text =\"\n# obs  id year attend\n# 1  47 2000      6\n# 2  47 2001      7\n# 3  47 2002      7\n# 4  47 2003      6\n# 5  47 2004      5\n# 6  47 2005      4\n# 7  47 2006      3\n# 8  47 2007      2\n# 9  47 2008      1\n# 10 47 2009      1\n# 11 47 2010      2\n# 12 47 2011      3\n# \n# \")\n# ds<- ds %>% dplyr::mutate(time=year-2000)\n# print(ds)\n```\n\n```{r, echo=F, eval=TRUE}\n# # canvas\n# p<-ggplot(ds, aes(x=time,y=attend))\n# # geoms\n# p<- p+ geom_point(aes(fill=attendF), size=3.5, shape=21)\n# p<- p+ geom_line(aes(group=id), alpha=.6, linetype=2, size=.5)\n# # scales\n# p<- p+ scale_fill_manual(values=attendCol8)\n# p<- p+ scale_y_continuous(\"Church attendance\",\n#                      limits=c(0, 8),\n#                      breaks=c(1:8))\n# p<- p+ scale_x_continuous(\"Years since 2000\",\n#                    limits=c(0,11),\n#                    breaks=c(0:11))\n# # annotations\n# p<- p + labs(title=paste0(\"In the past year, how often have you attended a worship service?\"))\n# p<- p + guides(fill = guide_legend(reverse=TRUE, title=\"Response category\")) \n# # # themes\n# p<- p + ggplot2::theme_bw()\n# p<- p + ggplot2::theme_bw(base_size=baseSize)\n# p<- p + ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = 12)) \n# p<- p + ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\"))\n# p<- p + ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\"))\n# p<- p + ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\"))\n# trajM <- p + ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\"))\n# trajM # trajectory entered Manually\ntrajM<- trajD\n```\n\nThe simplest possible model that can be fit to these data is the intercept-only model:  \n\n\\[{y_{ti}} = {\\beta _0} + {\\varepsilon _{ti}}\\]  \n\nwhich implies that the data can be represented with a straight, zero-slope line:\n```{r}\nds$m0<- predict(lm(attend ~ 1, ds))\nprint(ds)\np<- trajM+ ggplot2::geom_line(aes(y=m0),color=\"black\", size=.5)\np\n```\n\nAdding a fixed slope to the equation:  \n\n\\[{y_{ti}} = {\\beta _0} + {\\beta _1}Tim{e_t} + {\\varepsilon _{ti}}\\]\n\n```{r c5}\nm1<- predict(lm(attend ~ time, ds))\nds<- ds %>% dplyr::mutate(m1=m1)\nprint(ds)\np<-p+ geom_line(aes(y=m1),color=\"#1b9e77\", size=.5)\np\n```\n\n\nAdding the curvarture to the prediction line can be accomplished by adding a quadratic term\n```{r c6}\nm2 <- predict(lm(attend ~ time + I(time^2),ds))\n# quadratic<- predict(lm(attend ~ poly(time,2),ds))\nds<- ds %>% mutate(m2=m2)\nprint(ds)\np<-p+ geom_line(aes(y=m2),color=\"#d95f02\", size=.5)\np\n# p<-p+ geom_line(aes(y=cubic),color=\"green\", size=.5)\n```\n\nOne can also add a cubic term, if the second turning point is neccessary to describe the curvature\n```{r c7}\nm3 <- predict(lm(attend ~ time + I(time^2) + I(time^3),ds))\nds<- ds %>% mutate( m3=m3)\nprint(ds)\np<-p+ geom_line(aes(y=m3),color=\"#7570b3\", size=.5)\np\n```\n",
    "created" : 1404431023394.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "148|25|175|3|\n",
    "hash" : "2049354893",
    "id" : "31C68AC0",
    "lastKnownWriteTime" : 1404456878,
    "path" : "~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/Models/LCM/IntroLCM.Rmd",
    "project_path" : "Models/LCM/IntroLCM.Rmd",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}