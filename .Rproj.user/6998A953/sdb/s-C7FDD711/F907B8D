{
    "contents" : "---\ntitle: \"Single model\"\noutput:\n  pdf_document:\n    fig_crop: no\n    fig_width: 8\n    highlight: haddock\n    latex_engine: xelatex\n    number_sections: yes\n    toc: yes\n    toc_depth: 3\n  md_document:\n    toc: yes\n    toc_depth: 3\n  html_document:\n    css: ~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/www/css/thesis.css\n    fig.retina: 2\n    fig_width: 8\n    toc: yes\n  word_document:\n    fig_width: 6.5\nmainfont: Calibri\n---\n\n<!--  Set the working directory to the repository's base directory; this assumes the report is nested inside of only one directory.-->\n```{r, echo=F, message=F} \nrequire(knitr)\nopts_knit$set(root.dir='../../../')  #Don't combine this call with any other chunk -especially one that uses file paths.\n\n```\n\n```{r set_options, echo=F, message=F}\nrequire(knitr)\n# getwd()\nopts_chunk$set(\n  results='show', \n  message = TRUE,\n  comment = NA, \n  tidy = FALSE,\n#   fig.height = 4.8, \n#   fig.width = 6.5, \n#   out.width = NULL,\n  fig.path = 'figureRmd/',     \n  dev = \"png\",\n  dpi = 100\n)\nechoChunks <- FALSE\nwarningChunks<- FALSE\noptions(width=120) #So the output is 50% wider than the default.\nread_chunk(\"./Models/LCM/LCM.R\") # the file to which knitr calls for the chunks\n```\n\n```{r DeclareGlobals, echo=echoChunks, message=FALSE}\naesDefs\n```\n\n```{r LoadPackages, echo=echoChunks, message=F}\n```\n\n```{r LoadData, echo=echoChunks, message=T}\n# select only respondence in the cross-sectional sample\n\n```\n\n```{r}\nmodelNumber<- \"m10\"\nnumID<- 10000\n\n\nmodnum<-cat(modelNumber)\ndsL<-readRDS(\"./Data/Derived/dsL.rds\")\nds<- dsL %>% dplyr::filter(race==4,year %in% c(2000:2011)) %>%\n  dplyr::filter(!ave(attend, id, FUN = function(x) any(is.na(x)))) %>%\n  dplyr::mutate(timec=year-2000, timec2= timec^2, timec3= timec^3, \n                agec= round( (agemon/12),0)-16) %>% \n  dplyr::select(id,year,attend, timec,timec2, timec3, agec)\nhead(ds, 100)\n\n```\n\n\n```{r}\n(m <-lmer (attend ~ \n              1  + timec + timec2 \n            + (1 | id),\n            data = ds, REML=0))\n```\n\n\n```{r}\nsummary(model) \n```\n\n\n## Model formula\n```{r}\nmodel@call \n```\n\n## Fit and Information indices\n\n```{r}\n# get indicies\nmInfo<-summary(model)$AICtab\nmInfo[\"N\"]<- model@devcomp$dims[\"N\"] # number of datapoints, verify\nmInfo[\"p\"]<- model@devcomp$dims[\"p\"] # number of estimated parameters, verify\nmInfo[\"ids\"]<- (summary(model))$ngrps # number of units on level-2, here: individuals\nmInfo\n```\n\n## Random Effects (RE)\n\n### Matrix of RE\n```{r}\n# extract RE covariance matrix\nmREcov<-     data.frame(     summary(model)$varcor$id   ) # covariance matrix of RE\nmREcor<-  data.frame(attr(summary(model)$varcor$id,\"correlation\")) # corrleation matrix of RE\nmRE<-   data.frame(sd= (attr(summary(model)$varcor$id,\"stddev\")))\nmRE$var<- mRE$sd^2\nmRE<-mRE[c(\"var\",\"sd\")]\nmRE\nmREcov\n```\n\n### extracting RE for each individual\n```{r}\nRE<- lme4:::ranef.merMod(model)$id \nhead(RE,6)\n# however\ncor(RE)  # not the same as mRE, find out why\nvar(RE)  # not the same as mRE, find out why\n```\n\n## Fixed Effects (FE)\n\n\n### estimate of the FE\n```{r}\n# similar ways to extract FE estimates, #3 is the fullest\nFE<- summary(model)$coefficients\nFE\n```\n\n### Matrix of FE\n```{r}\nmFE<- (summary(model)$vcov@factors$correlation) # notice that this is object of \nmFE\n```\n\n## Prediction and Residuals\n\n```{r}\ndsp<- data.frame(getME(model,\"X\")) # no Y, only predictors (with interaction terms)\ndsp$id<-getME(model,\"flist\")$id # first level grouping factor, individual\ndsp$y<-getME(model,\"y\") # response vector\ndsp$yHat<- predict(model) # predicted values\ndsp$resid<- lme4:::residuals.merMod(model)\nidentical (  dsp$y-dsp$yHat, dsp$resid)\nhead(dsp,13)\n```\n\nGetting the standard error of residuals\n```{r}\nsigma<-sigma(model) # std.error of residuals <- this methods is preferred\n# however\nSDR<-sd(dsp$resid) # not the same as sigma(model) = find out why\nidentical (sigma, SDR) # WHY?\n# however, compare\nsigma\nSDR\nsqrt(sigma/SDR)\n```\n\n## Conditional values\nPredictions form fixed effects only, no individual variability is used in calculation\n\n```{r}\nFE <- fixef(model)\n# use fixed effects estimates to find conditional predictions\ndsp$yPar<-(\n  (FE[\"(Intercept)\"])         +(FE[\"agec\"]*dsp$agec)\n  +(FE[\"timec\"]*dsp$timec)    +(FE[\"agec:timec\"]*dsp$agec*dsp$timec)\n  +(FE[\"timec2\"]*dsp$timec2)  +(FE[\"agec:timec2\"]*dsp$agec*dsp$timec2)\n  +(FE[\"timec3\"]*dsp$timec3)  +(FE[\"agec:timec3\"]*dsp$agec*dsp$timec3)\n  )\n```\n\n## List of availible elements\n```{r}\nsummary(model)\nmInfo # model information indices\nmRE  # variances and standard deviations of random effects\nmREcov # covariance matrix of Random Effects\nmREcor # correlation  matrix of Random Effects\nFE # estimates of Fixed Effects, SE, t-value\nmFE # matrix of correlations among Fixed Effects\nsigma # standard deviation of residual\nhead(dsp,13) # input + output + residual + conditional\n\nmodelSave<-cat(paste0(modelNumber,\"S\")) \nmodS<- list(mInfo,mRE,mREcov,mREcor,FE,mFE,sigma,dsp) # to save in an external file\nstr(modS)\n```\n",
    "created" : 1404519185380.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3929638847",
    "id" : "F907B8D",
    "lastKnownWriteTime" : 1404570377,
    "path" : "~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/Models/LCM/models/m10.Rmd",
    "project_path" : "Models/LCM/models/m10.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}