{
    "contents" : "---\ntitle: \"lmer guide\"\noutput:\n  html_document:\n    css: ~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/www/css/thesis.css\n    fig.retina: 2\n    fig_width: 8\n    toc: yes\n  md_document:\n    toc: yes\n    toc_depth: 3\n  pdf_document:\n    fig_crop: no\n    fig_width: 8\n    highlight: haddock\n    latex_engine: xelatex\n    number_sections: yes\n    toc: yes\n    toc_depth: 3\n  word_document:\n    fig_width: 6.5\nmainfont: Calibri\n---\n\n<!--  Set the working directory to the repository's base directory; this assumes the report is nested inside of only one directory.-->\n```{r, echo=F, message=F} \nrequire(knitr)\nopts_knit$set(root.dir='../../')  #Don't combine this call with any other chunk -especially one that uses file paths.\n\n```\n\n```{r set_options, echo=F, message=F}\nrequire(knitr)\n# getwd()\nopts_chunk$set(\n  results='show', \n  message = TRUE,\n  comment = NA, \n  tidy = FALSE,\n#   fig.height = 4.8, \n#   fig.width = 6.5, \n#   out.width = NULL,\n  fig.path = 'lmerGuide/',     \n  dev = \"png\",\n  dpi = 100\n)\nechoChunks <- FALSE\nwarningChunks<- FALSE\noptions(width=120) #So the output is 50% wider than the default.\nread_chunk(\"./Models/LCM/LCM.R\") # the file to which knitr calls for the chunks\n```\n\n```{r DeclareGlobals, echo=echoChunks, message=FALSE}\naesDefs\n```\n\n```{r LoadPackages, echo=echoChunks, message=F}\n```\n\n```{r LoadData, echo=echoChunks, message=T}\n# select only respondence in the cross-sectional sample\n\n```\n\nLearnging the basics of lme4 package, <code>lmer()</code> function and S4 objects\n\n## Basics \nPrepare data for modeling. \nOnly the first 200 respondents will be selected to keep illustration light.\n```{r}\ndsL<-readRDS(\"./Data/Derived/dsL.rds\")\nds<- dsL %>% dplyr::filter(id %in% c(1:200),year %in% c(2000:2011)) %>% \n  dplyr::mutate(timec=year-2000, timec2= timec^2, timec3= timec^3, \n                agec= round( (agemon/12),0)-16) %>% \n  dplyr::select(id,year,attend, timec,timec2, timec3, agec)\nhead(ds, 20)\n```\n\nFit the model with <code>lmer</code>\n```{r}\nm10 <-lmer (attend ~ \n               1  + agec + timec + timec2 + timec3\n             + agec:timec +agec:timec2 + agec:timec3\n             + (1 + timec + timec2 + timec3 | id),\n             data = ds, REML=0)\nmodel<- m10\n```\n\nPrint the basic results of  the fitted model\n```{r}\nprint(model) \n```\n\nOr get a more detailed summary\n```{r}\nsummary(model)\n```\n\nFor a list of objects that can be extracted from the model\n```{r}\nstr(summary(model))\n```\n\n\n\nThere a number of ways one could extract the needed element from the S4 object. In addition, some of the elements might be stored in several locations.   \n\n## Model formula\n```{r}\nmodel@call # 1\n(summary(model))$call #2\n```\n\n## Fit and Information indices\n\n```{r}\n# get indicies\nmInfo<-summary(model)$AICtab\nmInfo\nmInfo['logLik']\n```\n\nAleternatively,\n```{r}\nlogLik<-logLik(model)\ndev<-deviance(model)\nAIC <- AIC(model) \nBIC <- BIC(model)\nN<- model@devcomp$dims[\"N\"] # Looks like the total number of data points ( individual-by-time)\np<- model@devcomp$dims[\"p\"] # Looks like the number of estimated parameters, verify\nids<- (summary(model))$ngrps # number of units on level-2, here: individuals\nmInfo<- c(\"logLik\"=logLik,\"dev\"=dev,\"AIC\"=AIC,\"BIC\"=BIC,\"N\"=N, \"p\"=p, \"ids\"=ids)\nmInfo\n```\n\n## Random Effects (RE)\n\n### Matrix of RE\n```{r}\nstr(summary(model)$varcor)\n# extract RE covariance matrix\nmRE<- data.frame(summary(model)$varcor$id) \nmRE\nmRE<- data.frame(VarCorr(model)$id)\nmRE\n```\n\n```{r}\nmREcor<-  data.frame(attr(summary(model)$varcor$id,\"correlation\")) # corrleation \nmREcor\nmREcor<- data.frame( attr(VarCorr(model)$id,\"correlation\"))\nmREcor\nmREsd<-   data.frame(STD=(attr(summary(model)$varcor$id,\"stddev\"))) \nmREsd\n```\n\n\n\n### extracting RE for each individual\n```{r}\nRE<- lme4:::ranef.merMod(model)$id \nhead(RE,5)\ntail(RE,5)\nmRE\ncor(RE)  # not the same as mRE, find out why\nvar(RE)  # not the same as mRE, find out why\n```\n\n## Fixed Effects (RE)\n\n### Matrix of FE\n```{r}\nstr(summary(model)$vcov)\nmFE<- (summary(model)$vcov@factors$correlation) # notice that this is object of class corMatrix\nstr(mFE)\n```\n\n### estimate of the FE\n```{r}\n# similar ways to extract FE estimates, #3 is the fullest\nFE1<- fixef(model) #1 \nFE2<- getME(model, \"beta\") # 2\nFE3<- summary(model)$coefficients # 3\ncoefs<- FE1\n```\n\n## Prediction and Residuals\n### Restatement of model input\nFirst, recover information that went into the model\n```{r}\n# dsP - P for predicted\ndsp<-data.frame(model@frame) # original vars used by the model (no interaction terms)\nhead(dsp,13)\n```\n\nAnother way, which includes interaction terms, but no outcome\n```{r}\ndsp<- data.frame(getME(model,\"X\")) # no Y, only predictors (with interaction terms)\nhead(dsp,13)\n```\n\nWe can add response vector and the grouping factor for the second level (individual)\n```{r}\ndsp$id<-getME(model,\"flist\")$id # first level grouping factor, individual\ndsp$y<-getME(model,\"y\") # response vector\nhead(dsp,13)\n```\n\n### Adding model output\nThere are several way to extract the predictions made by the model\n```{r}\n# model outcome, predicted values\nyHat1<- fitted(model) # 1\nyHat2<- predict(model) # 2\nyHat3<- getME(model,\"mu\") # 3\n\nidentical(yHat1,yHat2)\nidentical(as.numeric(yHat2),yHat3)\ndsp$yHat<- predict(model)\nhead(dsp,13)\n```\n\n### Adding residual\n```{r}\ndsp$resid<- lme4:::residuals.merMod(model) # individual residual (id and time)\nhead(dsp,13)\nidentical (  dsp$y-dsp$yHat, dsp$resid)\n\n```\n\nGetting the standard error of residuals\n```{r}\ngetME(model,\"sigma\") # standard error of residuals, same sigma(model)\nsigma(model) # std.error of residuals <- this methods is preferred\n# however\nsd(dsp$resid) # not the same as sigma(model) = find out why\nidentical (sigma(model),sd(dsp$resid)) # WHY?\n```\n\n## Conditional values\nPredictions form fixed effects only, no individual variability is used in calculation\n\n```{r}\n# create object \"coefs\" for easy reference\ncoefs <- fixef(model)\n# use fixed effects estimates to find conditional predictions??\ndsp$yPar<-(\n  (coefs[\"(Intercept)\"])         +(coefs[\"agec\"]*dsp$agec)\n  +(coefs[\"timec\"]*dsp$timec)    +(coefs[\"agec:timec\"]*dsp$agec*dsp$timec)\n  +(coefs[\"timec2\"]*dsp$timec2)  +(coefs[\"agec:timec2\"]*dsp$agec*dsp$timec2)\n  +(coefs[\"timec3\"]*dsp$timec3)  +(coefs[\"agec:timec3\"]*dsp$agec*dsp$timec3)\n)\nhead(dsp,13)\n\n```\n\n",
    "created" : 1404511992075.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "859057724",
    "id" : "50DF1FF0",
    "lastKnownWriteTime" : 1404514232,
    "path" : "~/GitHub/Longitudinal_Models_of_Religiosity_NLSY97/Models/LCM/lmerGuide.Rmd",
    "project_path" : "Models/LCM/lmerGuide.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}